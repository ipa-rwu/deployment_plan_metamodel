/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.deployment.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.resource.IEObjectDescription;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.google.common.base.Predicate;

import de.fraunhofer.ipa.deployment.util.AbstractComputationAssignmentTarget;
import deploymentPlan.AbstractDeploymentPlan;
import deploymentPlan.ImplementationAssignment;
import deploymentPlan.impl.ConfigExecutionParameterImpl;
import deploymentPlan.impl.ConfigSoftwareComponentImpl;
import implementationDescription.impl.ExecutionParameterImpl;
import targetEnvironment.ComputationDeviceInstance;

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
public class PlanProposalProvider extends AbstractPlanProposalProvider {

    @Override
    public void completeConfigExecutionParameter_From(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        ConfigExecutionParameterImpl ref_model = (ConfigExecutionParameterImpl) model;
        ConfigSoftwareComponentImpl config_comp = (ConfigSoftwareComponentImpl) ref_model.eContainer();
        AbstractComputationAssignmentTarget comp = config_comp.getComponent();
        lookupCrossReference((CrossReference) assignment.getTerminal(),
                context, acceptor, new Predicate<IEObjectDescription>() {
                    @Override
                    public boolean apply(IEObjectDescription input) {
                        ExecutionParameterImpl param_impl = (ExecutionParameterImpl) input.getEObjectOrProxy();
                        if(param_impl.eIsProxy()) {
                            EObject obj = EcoreUtil.resolve(param_impl, model);
                            AbstractComputationAssignmentTarget tmp = (AbstractComputationAssignmentTarget) obj.eContainer().eContainer();
                            if(tmp == comp) {
                                return true;
                            }
                        }
                        return false;
                    }

        });
        }

    @Override
    public void completeImplementationAssignment_ExecutedBy(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
        ImplementationAssignment implAssign = (ImplementationAssignment) model;
        AbstractDeploymentPlan plan = (AbstractDeploymentPlan) implAssign.eContainer().eContainer();
        lookupCrossReference((CrossReference) assignment.getTerminal(),
                context, acceptor, new Predicate<IEObjectDescription>() {
                    @Override
                    public boolean apply(IEObjectDescription input) {
                        ComputationDeviceInstance inputObj = (ComputationDeviceInstance) input.getEObjectOrProxy();
                        if(inputObj.eIsProxy()) {
                            EObject obj = EcoreUtil.resolve(inputObj, model);
                            if(plan.getDeployTo() == obj.eContainer()) {
                                return true;
                            }
                        }
                        return false;
                    }

        });
    }
}
