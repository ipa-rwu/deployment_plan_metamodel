/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.deplyoment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.deployment.services.UtilGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ImplementationDescriptionGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {

    public class ImplementationDescriptionElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.ImplementationDescription");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Keyword cImplementationDescriptionKeyword_0 = (Keyword)cGroup.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
        private final Keyword cSoftwareDependencyKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_4_1 = (RuleCall)cGroup_4.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
        private final Assignment cSoftwareDependencyAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
        private final RuleCall cSoftwareDependencyEStringParserRuleCall_4_3_0 = (RuleCall)cSoftwareDependencyAssignment_4_3.eContents().get(0);
        private final Group cGroup_4_4 = (Group)cGroup_4.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_4_4_0 = (RuleCall)cGroup_4_4.eContents().get(0);
        private final Assignment cSoftwareDependencyAssignment_4_4_1 = (Assignment)cGroup_4_4.eContents().get(1);
        private final RuleCall cSoftwareDependencyEStringParserRuleCall_4_4_1_0 = (RuleCall)cSoftwareDependencyAssignment_4_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_4_5 = (RuleCall)cGroup_4.eContents().get(5);
        private final Keyword cIncludeSoftwareComponentKeyword_5 = (Keyword)cGroup.eContents().get(5);
        private final RuleCall cINDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
        private final Assignment cIncludeSoftwareComponentAssignment_7 = (Assignment)cGroup.eContents().get(7);
        private final RuleCall cIncludeSoftwareComponentSoftwareComponentParserRuleCall_7_0 = (RuleCall)cIncludeSoftwareComponentAssignment_7.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
        private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);

        //ImplementationDescription returns ImplementationDescription:
        //    'ImplementationDescription:'
        //    INDENT
        //        'name:' name=EString
        //        ('softwareDependency:'
        //            INDENT
        //                PreListElement softwareDependency+=EString
        //                ( PreListElement softwareDependency+=EString)*
        //            DEDENT
        //            )?
        //        'includeSoftwareComponent:'
        //            INDENT
        //                includeSoftwareComponent+=SoftwareComponent+
        //            DEDENT
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //'ImplementationDescription:'
        //INDENT
        //    'name:' name=EString
        //    ('softwareDependency:'
        //        INDENT
        //            PreListElement softwareDependency+=EString
        //            ( PreListElement softwareDependency+=EString)*
        //        DEDENT
        //        )?
        //    'includeSoftwareComponent:'
        //        INDENT
        //            includeSoftwareComponent+=SoftwareComponent+
        //        DEDENT
        //DEDENT
        public Group getGroup() { return cGroup; }

        //'ImplementationDescription:'
        public Keyword getImplementationDescriptionKeyword_0() { return cImplementationDescriptionKeyword_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //('softwareDependency:'
        //    INDENT
        //        PreListElement softwareDependency+=EString
        //        ( PreListElement softwareDependency+=EString)*
        //    DEDENT
        //    )?
        public Group getGroup_4() { return cGroup_4; }

        //'softwareDependency:'
        public Keyword getSoftwareDependencyKeyword_4_0() { return cSoftwareDependencyKeyword_4_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4_1() { return cINDENTTerminalRuleCall_4_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_4_2() { return cPreListElementParserRuleCall_4_2; }

        //softwareDependency+=EString
        public Assignment getSoftwareDependencyAssignment_4_3() { return cSoftwareDependencyAssignment_4_3; }

        //EString
        public RuleCall getSoftwareDependencyEStringParserRuleCall_4_3_0() { return cSoftwareDependencyEStringParserRuleCall_4_3_0; }

        //( PreListElement softwareDependency+=EString)*
        public Group getGroup_4_4() { return cGroup_4_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_4_4_0() { return cPreListElementParserRuleCall_4_4_0; }

        //softwareDependency+=EString
        public Assignment getSoftwareDependencyAssignment_4_4_1() { return cSoftwareDependencyAssignment_4_4_1; }

        //EString
        public RuleCall getSoftwareDependencyEStringParserRuleCall_4_4_1_0() { return cSoftwareDependencyEStringParserRuleCall_4_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_4_5() { return cDEDENTTerminalRuleCall_4_5; }

        //'includeSoftwareComponent:'
        public Keyword getIncludeSoftwareComponentKeyword_5() { return cIncludeSoftwareComponentKeyword_5; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_6() { return cINDENTTerminalRuleCall_6; }

        //includeSoftwareComponent+=SoftwareComponent+
        public Assignment getIncludeSoftwareComponentAssignment_7() { return cIncludeSoftwareComponentAssignment_7; }

        //SoftwareComponent
        public RuleCall getIncludeSoftwareComponentSoftwareComponentParserRuleCall_7_0() { return cIncludeSoftwareComponentSoftwareComponentParserRuleCall_7_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_8() { return cDEDENTTerminalRuleCall_8; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
    }
    public class ExecutionRequirementElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.ExecutionRequirement");
        private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
        private final RuleCall cDeviceRequirementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
        private final RuleCall cSoftwareConfigurationRequirementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);

        ////@Override
        ////AbstractComputationAssignmentTarget returns util::AbstractComputationAssignmentTarget:
        ////    ImplementationDescription | SoftwareComponent
        ////;
        //ExecutionRequirement returns ExecutionRequirement:
        //    DeviceRequirement | SoftwareConfigurationRequirement;
        @Override public ParserRule getRule() { return rule; }

        //DeviceRequirement | SoftwareConfigurationRequirement
        public Alternatives getAlternatives() { return cAlternatives; }

        //DeviceRequirement
        public RuleCall getDeviceRequirementParserRuleCall_0() { return cDeviceRequirementParserRuleCall_0; }

        //SoftwareConfigurationRequirement
        public RuleCall getSoftwareConfigurationRequirementParserRuleCall_1() { return cSoftwareConfigurationRequirementParserRuleCall_1; }
    }
    public class SoftwareComponentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.SoftwareComponent");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cSoftwareComponentAction_0 = (Action)cGroup.eContents().get(0);
        private final RuleCall cPreListElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
        private final Keyword cPathKeyword_5 = (Keyword)cGroup.eContents().get(5);
        private final Assignment cPathAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cPathEStringParserRuleCall_6_0 = (RuleCall)cPathAssignment_6.eContents().get(0);
        private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
        private final Keyword cExecutionRequirementKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
        private final Assignment cExecutionRequirementAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
        private final RuleCall cExecutionRequirementExecutionRequirementParserRuleCall_7_2_0 = (RuleCall)cExecutionRequirementAssignment_7_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
        private final RuleCall cDEDENTTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);

        //SoftwareComponent returns SoftwareComponent:
        //    {SoftwareComponent}
        //    PreListElement 'name:' name=EString
        //    INDENT
        //    'path:' path=EString
        //    (
        //    'executionRequirement:'
        //        INDENT
        //        executionRequirement+=ExecutionRequirement+
        //        DEDENT
        //        )?
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{SoftwareComponent}
        //PreListElement 'name:' name=EString
        //INDENT
        //'path:' path=EString
        //(
        //'executionRequirement:'
        //    INDENT
        //    executionRequirement+=ExecutionRequirement+
        //    DEDENT
        //    )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //{SoftwareComponent}
        public Action getSoftwareComponentAction_0() { return cSoftwareComponentAction_0; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1() { return cPreListElementParserRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }

        //'path:'
        public Keyword getPathKeyword_5() { return cPathKeyword_5; }

        //path=EString
        public Assignment getPathAssignment_6() { return cPathAssignment_6; }

        //EString
        public RuleCall getPathEStringParserRuleCall_6_0() { return cPathEStringParserRuleCall_6_0; }

        //(
        //'executionRequirement:'
        //    INDENT
        //    executionRequirement+=ExecutionRequirement+
        //    DEDENT
        //    )?
        public Group getGroup_7() { return cGroup_7; }

        //'executionRequirement:'
        public Keyword getExecutionRequirementKeyword_7_0() { return cExecutionRequirementKeyword_7_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_7_1() { return cINDENTTerminalRuleCall_7_1; }

        //executionRequirement+=ExecutionRequirement+
        public Assignment getExecutionRequirementAssignment_7_2() { return cExecutionRequirementAssignment_7_2; }

        //ExecutionRequirement
        public RuleCall getExecutionRequirementExecutionRequirementParserRuleCall_7_2_0() { return cExecutionRequirementExecutionRequirementParserRuleCall_7_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7_3() { return cDEDENTTerminalRuleCall_7_3; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_8() { return cDEDENTTerminalRuleCall_8; }
    }
    public class DeviceRequirementElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.DeviceRequirement");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Keyword cDeviceRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
        private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
        private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
        private final RuleCall cTypeEStringParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
        private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
        private final RuleCall cINDENTTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
        private final Keyword cHWSWParemeterKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_5_2 = (RuleCall)cGroup_5.eContents().get(2);
        private final Assignment cParameterAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
        private final RuleCall cParameterHWSWParemeterParserRuleCall_5_3_0 = (RuleCall)cParameterAssignment_5_3.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_5_4 = (RuleCall)cGroup_5.eContents().get(4);
        private final RuleCall cDEDENTTerminalRuleCall_5_5 = (RuleCall)cGroup_5.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);

        //DeviceRequirement returns DeviceRequirement:
        //    'deviceRequirement:'
        //    INDENT
        //        PreListElement 'type:' type= EString
        //        (
        //        INDENT
        //        'HWSWParemeter:'
        //            INDENT
        //                 parameter+=HWSWParemeter+
        //            DEDENT
        //        DEDENT
        //        )?
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //'deviceRequirement:'
        //INDENT
        //    PreListElement 'type:' type= EString
        //    (
        //    INDENT
        //    'HWSWParemeter:'
        //        INDENT
        //             parameter+=HWSWParemeter+
        //        DEDENT
        //    DEDENT
        //    )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //'deviceRequirement:'
        public Keyword getDeviceRequirementKeyword_0() { return cDeviceRequirementKeyword_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_2() { return cPreListElementParserRuleCall_2; }

        //'type:'
        public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }

        //type= EString
        public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

        //EString
        public RuleCall getTypeEStringParserRuleCall_4_0() { return cTypeEStringParserRuleCall_4_0; }

        //(
        //INDENT
        //'HWSWParemeter:'
        //    INDENT
        //         parameter+=HWSWParemeter+
        //    DEDENT
        //DEDENT
        //)?
        public Group getGroup_5() { return cGroup_5; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_5_0() { return cINDENTTerminalRuleCall_5_0; }

        //'HWSWParemeter:'
        public Keyword getHWSWParemeterKeyword_5_1() { return cHWSWParemeterKeyword_5_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_5_2() { return cINDENTTerminalRuleCall_5_2; }

        //parameter+=HWSWParemeter+
        public Assignment getParameterAssignment_5_3() { return cParameterAssignment_5_3; }

        //HWSWParemeter
        public RuleCall getParameterHWSWParemeterParserRuleCall_5_3_0() { return cParameterHWSWParemeterParserRuleCall_5_3_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_5_4() { return cDEDENTTerminalRuleCall_5_4; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_5_5() { return cDEDENTTerminalRuleCall_5_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
    }
    public class SoftwareConfigurationRequirementElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.SoftwareConfigurationRequirement");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Keyword cSoftwareConfigurationParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Assignment cParameterAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final RuleCall cParameterSoftwareExecutionParemeterParserRuleCall_2_0 = (RuleCall)cParameterAssignment_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);

        //SoftwareConfigurationRequirement returns SoftwareConfigurationRequirement:
        //    'softwareConfigurationParameter:'
        //        INDENT
        //             parameter+=SoftwareExecutionParemeter+
        //        DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //'softwareConfigurationParameter:'
        //    INDENT
        //         parameter+=SoftwareExecutionParemeter+
        //    DEDENT
        public Group getGroup() { return cGroup; }

        //'softwareConfigurationParameter:'
        public Keyword getSoftwareConfigurationParameterKeyword_0() { return cSoftwareConfigurationParameterKeyword_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }

        //parameter+=SoftwareExecutionParemeter+
        public Assignment getParameterAssignment_2() { return cParameterAssignment_2; }

        //SoftwareExecutionParemeter
        public RuleCall getParameterSoftwareExecutionParemeterParserRuleCall_2_0() { return cParameterSoftwareExecutionParemeterParserRuleCall_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_3() { return cDEDENTTerminalRuleCall_3; }
    }
    public class ExecutionPropertyElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.ExecutionProperty");
        private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
        private final RuleCall cHWSWParemeterParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
        private final RuleCall cSoftwareExecutionParemeterParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);

        //ExecutionProperty returns ExecutionProperty:
        //     HWSWParemeter | SoftwareExecutionParemeter;
        @Override public ParserRule getRule() { return rule; }

        //HWSWParemeter | SoftwareExecutionParemeter
        public Alternatives getAlternatives() { return cAlternatives; }

        //HWSWParemeter
        public RuleCall getHWSWParemeterParserRuleCall_0() { return cHWSWParemeterParserRuleCall_0; }

        //SoftwareExecutionParemeter
        public RuleCall getSoftwareExecutionParemeterParserRuleCall_1() { return cSoftwareExecutionParemeterParserRuleCall_1; }
    }
    public class HWSWParemeterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.HWSWParemeter");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cHWSWParemeterAction_0 = (Action)cGroup.eContents().get(0);
        private final RuleCall cPreListElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
        private final Keyword cKindKeyword_5 = (Keyword)cGroup.eContents().get(5);
        private final Assignment cKindAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cKindAttributeKindParserRuleCall_6_0 = (RuleCall)cKindAssignment_6.eContents().get(0);
        private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
        private final Keyword cDescriptionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
        private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
        private final RuleCall cDescriptionEStringParserRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
        private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
        private final Keyword cValueKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_8_2 = (RuleCall)cGroup_8.eContents().get(2);
        private final Assignment cValueAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
        private final RuleCall cValuePropertyValueParserRuleCall_8_3_0 = (RuleCall)cValueAssignment_8_3.eContents().get(0);
        private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_8_4_0 = (RuleCall)cGroup_8_4.eContents().get(0);
        private final Assignment cValueAssignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
        private final RuleCall cValuePropertyValueParserRuleCall_8_4_1_0 = (RuleCall)cValueAssignment_8_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_8_5 = (RuleCall)cGroup_8.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);

        ////ExecutionProperty_Impl returns ExecutionProperty:
        ////    {ExecutionProperty}
        ////    PreListElement 'name:' name=EString
        ////    (
        ////        INDENT
        ////        'description' description=EString
        ////        DEDENT
        ////    )?
        ////    (
        ////        INDENT
        ////        'value' value=PropertyValue
        ////        DEDENT
        ////    )?
        ////    ;
        //HWSWParemeter returns HWSWParemeter:
        //    {HWSWParemeter}
        //    PreListElement 'name:' name=EString
        //    INDENT
        //        'kind:' kind=AttributeKind
        //        (
        //        'description:' description=EString
        //        )?
        //        (
        //            'value:'
        //            INDENT
        //            PreListElement value+=PropertyValue
        //            ( PreListElement value+=PropertyValue)*
        //            DEDENT
        //            )?
        //        DEDENT
        //        ;
        @Override public ParserRule getRule() { return rule; }

        //{HWSWParemeter}
        //PreListElement 'name:' name=EString
        //INDENT
        //    'kind:' kind=AttributeKind
        //    (
        //    'description:' description=EString
        //    )?
        //    (
        //        'value:'
        //        INDENT
        //        PreListElement value+=PropertyValue
        //        ( PreListElement value+=PropertyValue)*
        //        DEDENT
        //        )?
        //    DEDENT
        public Group getGroup() { return cGroup; }

        //{HWSWParemeter}
        public Action getHWSWParemeterAction_0() { return cHWSWParemeterAction_0; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1() { return cPreListElementParserRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }

        //'kind:'
        public Keyword getKindKeyword_5() { return cKindKeyword_5; }

        //kind=AttributeKind
        public Assignment getKindAssignment_6() { return cKindAssignment_6; }

        //AttributeKind
        public RuleCall getKindAttributeKindParserRuleCall_6_0() { return cKindAttributeKindParserRuleCall_6_0; }

        //(
        //'description:' description=EString
        //)?
        public Group getGroup_7() { return cGroup_7; }

        //'description:'
        public Keyword getDescriptionKeyword_7_0() { return cDescriptionKeyword_7_0; }

        //description=EString
        public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }

        //EString
        public RuleCall getDescriptionEStringParserRuleCall_7_1_0() { return cDescriptionEStringParserRuleCall_7_1_0; }

        //(
        //    'value:'
        //    INDENT
        //    PreListElement value+=PropertyValue
        //    ( PreListElement value+=PropertyValue)*
        //    DEDENT
        //    )?
        public Group getGroup_8() { return cGroup_8; }

        //'value:'
        public Keyword getValueKeyword_8_0() { return cValueKeyword_8_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_8_1() { return cINDENTTerminalRuleCall_8_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8_2() { return cPreListElementParserRuleCall_8_2; }

        //value+=PropertyValue
        public Assignment getValueAssignment_8_3() { return cValueAssignment_8_3; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_8_3_0() { return cValuePropertyValueParserRuleCall_8_3_0; }

        //( PreListElement value+=PropertyValue)*
        public Group getGroup_8_4() { return cGroup_8_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8_4_0() { return cPreListElementParserRuleCall_8_4_0; }

        //value+=PropertyValue
        public Assignment getValueAssignment_8_4_1() { return cValueAssignment_8_4_1; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_8_4_1_0() { return cValuePropertyValueParserRuleCall_8_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_8_5() { return cDEDENTTerminalRuleCall_8_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
    }
    public class SoftwareExecutionParemeterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.ImplementationDescription.SoftwareExecutionParemeter");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cSoftwareExecutionParemeterAction_0 = (Action)cGroup.eContents().get(0);
        private final RuleCall cPreListElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
        private final Keyword cKindKeyword_5 = (Keyword)cGroup.eContents().get(5);
        private final Assignment cKindAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cKindAttributeKindParserRuleCall_6_0 = (RuleCall)cKindAssignment_6.eContents().get(0);
        private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
        private final Keyword cDescriptionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
        private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
        private final RuleCall cDescriptionEStringParserRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
        private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
        private final Keyword cValueKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_8_2 = (RuleCall)cGroup_8.eContents().get(2);
        private final Assignment cValueAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
        private final RuleCall cValuePropertyValueParserRuleCall_8_3_0 = (RuleCall)cValueAssignment_8_3.eContents().get(0);
        private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_8_4_0 = (RuleCall)cGroup_8_4.eContents().get(0);
        private final Assignment cValueAssignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
        private final RuleCall cValuePropertyValueParserRuleCall_8_4_1_0 = (RuleCall)cValueAssignment_8_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_8_5 = (RuleCall)cGroup_8.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);

        //SoftwareExecutionParemeter returns SoftwareExecutionParemeter:
        //    {SoftwareExecutionParemeter}
        //    PreListElement 'name:' name=EString
        //    INDENT
        //        'kind:' kind=AttributeKind
        //        (
        //        'description:' description=EString
        //        )?
        //        (
        //            'value:'
        //            INDENT
        //            PreListElement value+=PropertyValue
        //            ( PreListElement value+=PropertyValue)*
        //            DEDENT
        //            )?
        //        DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{SoftwareExecutionParemeter}
        //PreListElement 'name:' name=EString
        //INDENT
        //    'kind:' kind=AttributeKind
        //    (
        //    'description:' description=EString
        //    )?
        //    (
        //        'value:'
        //        INDENT
        //        PreListElement value+=PropertyValue
        //        ( PreListElement value+=PropertyValue)*
        //        DEDENT
        //        )?
        //    DEDENT
        public Group getGroup() { return cGroup; }

        //{SoftwareExecutionParemeter}
        public Action getSoftwareExecutionParemeterAction_0() { return cSoftwareExecutionParemeterAction_0; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1() { return cPreListElementParserRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }

        //'kind:'
        public Keyword getKindKeyword_5() { return cKindKeyword_5; }

        //kind=AttributeKind
        public Assignment getKindAssignment_6() { return cKindAssignment_6; }

        //AttributeKind
        public RuleCall getKindAttributeKindParserRuleCall_6_0() { return cKindAttributeKindParserRuleCall_6_0; }

        //(
        //'description:' description=EString
        //)?
        public Group getGroup_7() { return cGroup_7; }

        //'description:'
        public Keyword getDescriptionKeyword_7_0() { return cDescriptionKeyword_7_0; }

        //description=EString
        public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }

        //EString
        public RuleCall getDescriptionEStringParserRuleCall_7_1_0() { return cDescriptionEStringParserRuleCall_7_1_0; }

        //(
        //    'value:'
        //    INDENT
        //    PreListElement value+=PropertyValue
        //    ( PreListElement value+=PropertyValue)*
        //    DEDENT
        //    )?
        public Group getGroup_8() { return cGroup_8; }

        //'value:'
        public Keyword getValueKeyword_8_0() { return cValueKeyword_8_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_8_1() { return cINDENTTerminalRuleCall_8_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8_2() { return cPreListElementParserRuleCall_8_2; }

        //value+=PropertyValue
        public Assignment getValueAssignment_8_3() { return cValueAssignment_8_3; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_8_3_0() { return cValuePropertyValueParserRuleCall_8_3_0; }

        //( PreListElement value+=PropertyValue)*
        public Group getGroup_8_4() { return cGroup_8_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8_4_0() { return cPreListElementParserRuleCall_8_4_0; }

        //value+=PropertyValue
        public Assignment getValueAssignment_8_4_1() { return cValueAssignment_8_4_1; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_8_4_1_0() { return cValuePropertyValueParserRuleCall_8_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_8_5() { return cDEDENTTerminalRuleCall_8_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }
    }


    private final ImplementationDescriptionElements pImplementationDescription;
    private final ExecutionRequirementElements pExecutionRequirement;
    private final SoftwareComponentElements pSoftwareComponent;
    private final DeviceRequirementElements pDeviceRequirement;
    private final SoftwareConfigurationRequirementElements pSoftwareConfigurationRequirement;
    private final ExecutionPropertyElements pExecutionProperty;
    private final HWSWParemeterElements pHWSWParemeter;
    private final SoftwareExecutionParemeterElements pSoftwareExecutionParemeter;

    private final Grammar grammar;

    private final UtilGrammarAccess gaUtil;

    private final TerminalsGrammarAccess gaTerminals;

    @Inject
    public ImplementationDescriptionGrammarAccess(GrammarProvider grammarProvider,
            UtilGrammarAccess gaUtil,
            TerminalsGrammarAccess gaTerminals) {
        this.grammar = internalFindGrammar(grammarProvider);
        this.gaUtil = gaUtil;
        this.gaTerminals = gaTerminals;
        this.pImplementationDescription = new ImplementationDescriptionElements();
        this.pExecutionRequirement = new ExecutionRequirementElements();
        this.pSoftwareComponent = new SoftwareComponentElements();
        this.pDeviceRequirement = new DeviceRequirementElements();
        this.pSoftwareConfigurationRequirement = new SoftwareConfigurationRequirementElements();
        this.pExecutionProperty = new ExecutionPropertyElements();
        this.pHWSWParemeter = new HWSWParemeterElements();
        this.pSoftwareExecutionParemeter = new SoftwareExecutionParemeterElements();
    }

    protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
        Grammar grammar = grammarProvider.getGrammar(this);
        while (grammar != null) {
            if ("de.fraunhofer.ipa.deplyoment.ImplementationDescription".equals(grammar.getName())) {
                return grammar;
            }
            List<Grammar> grammars = grammar.getUsedGrammars();
            if (!grammars.isEmpty()) {
                grammar = grammars.iterator().next();
            } else {
                return null;
            }
        }
        return grammar;
    }

    @Override
    public Grammar getGrammar() {
        return grammar;
    }


    public UtilGrammarAccess getUtilGrammarAccess() {
        return gaUtil;
    }

    public TerminalsGrammarAccess getTerminalsGrammarAccess() {
        return gaTerminals;
    }


    //ImplementationDescription returns ImplementationDescription:
    //    'ImplementationDescription:'
    //    INDENT
    //        'name:' name=EString
    //        ('softwareDependency:'
    //            INDENT
    //                PreListElement softwareDependency+=EString
    //                ( PreListElement softwareDependency+=EString)*
    //            DEDENT
    //            )?
    //        'includeSoftwareComponent:'
    //            INDENT
    //                includeSoftwareComponent+=SoftwareComponent+
    //            DEDENT
    //    DEDENT
    //    ;
    public ImplementationDescriptionElements getImplementationDescriptionAccess() {
        return pImplementationDescription;
    }

    public ParserRule getImplementationDescriptionRule() {
        return getImplementationDescriptionAccess().getRule();
    }

    ////@Override
    ////AbstractComputationAssignmentTarget returns util::AbstractComputationAssignmentTarget:
    ////    ImplementationDescription | SoftwareComponent
    ////;
    //ExecutionRequirement returns ExecutionRequirement:
    //    DeviceRequirement | SoftwareConfigurationRequirement;
    public ExecutionRequirementElements getExecutionRequirementAccess() {
        return pExecutionRequirement;
    }

    public ParserRule getExecutionRequirementRule() {
        return getExecutionRequirementAccess().getRule();
    }

    //SoftwareComponent returns SoftwareComponent:
    //    {SoftwareComponent}
    //    PreListElement 'name:' name=EString
    //    INDENT
    //    'path:' path=EString
    //    (
    //    'executionRequirement:'
    //        INDENT
    //        executionRequirement+=ExecutionRequirement+
    //        DEDENT
    //        )?
    //    DEDENT
    //    ;
    public SoftwareComponentElements getSoftwareComponentAccess() {
        return pSoftwareComponent;
    }

    public ParserRule getSoftwareComponentRule() {
        return getSoftwareComponentAccess().getRule();
    }

    //DeviceRequirement returns DeviceRequirement:
    //    'deviceRequirement:'
    //    INDENT
    //        PreListElement 'type:' type= EString
    //        (
    //        INDENT
    //        'HWSWParemeter:'
    //            INDENT
    //                 parameter+=HWSWParemeter+
    //            DEDENT
    //        DEDENT
    //        )?
    //    DEDENT
    //    ;
    public DeviceRequirementElements getDeviceRequirementAccess() {
        return pDeviceRequirement;
    }

    public ParserRule getDeviceRequirementRule() {
        return getDeviceRequirementAccess().getRule();
    }

    //SoftwareConfigurationRequirement returns SoftwareConfigurationRequirement:
    //    'softwareConfigurationParameter:'
    //        INDENT
    //             parameter+=SoftwareExecutionParemeter+
    //        DEDENT
    //    ;
    public SoftwareConfigurationRequirementElements getSoftwareConfigurationRequirementAccess() {
        return pSoftwareConfigurationRequirement;
    }

    public ParserRule getSoftwareConfigurationRequirementRule() {
        return getSoftwareConfigurationRequirementAccess().getRule();
    }

    //ExecutionProperty returns ExecutionProperty:
    //     HWSWParemeter | SoftwareExecutionParemeter;
    public ExecutionPropertyElements getExecutionPropertyAccess() {
        return pExecutionProperty;
    }

    public ParserRule getExecutionPropertyRule() {
        return getExecutionPropertyAccess().getRule();
    }

    ////ExecutionProperty_Impl returns ExecutionProperty:
    ////    {ExecutionProperty}
    ////    PreListElement 'name:' name=EString
    ////    (
    ////        INDENT
    ////        'description' description=EString
    ////        DEDENT
    ////    )?
    ////    (
    ////        INDENT
    ////        'value' value=PropertyValue
    ////        DEDENT
    ////    )?
    ////    ;
    //HWSWParemeter returns HWSWParemeter:
    //    {HWSWParemeter}
    //    PreListElement 'name:' name=EString
    //    INDENT
    //        'kind:' kind=AttributeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        DEDENT
    //        ;
    public HWSWParemeterElements getHWSWParemeterAccess() {
        return pHWSWParemeter;
    }

    public ParserRule getHWSWParemeterRule() {
        return getHWSWParemeterAccess().getRule();
    }

    //SoftwareExecutionParemeter returns SoftwareExecutionParemeter:
    //    {SoftwareExecutionParemeter}
    //    PreListElement 'name:' name=EString
    //    INDENT
    //        'kind:' kind=AttributeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        DEDENT
    //    ;
    public SoftwareExecutionParemeterElements getSoftwareExecutionParemeterAccess() {
        return pSoftwareExecutionParemeter;
    }

    public ParserRule getSoftwareExecutionParemeterRule() {
        return getSoftwareExecutionParemeterAccess().getRule();
    }

    //Description returns Description:
    //    {Description}
    //;
    public UtilGrammarAccess.DescriptionElements getDescriptionAccess() {
        return gaUtil.getDescriptionAccess();
    }

    public ParserRule getDescriptionRule() {
        return getDescriptionAccess().getRule();
    }

    //AbstractComputationAssignmentTarget returns AbstractComputationAssignmentTarget:
    //    {AbstractComputationAssignmentTarget}
    //;
    public UtilGrammarAccess.AbstractComputationAssignmentTargetElements getAbstractComputationAssignmentTargetAccess() {
        return gaUtil.getAbstractComputationAssignmentTargetAccess();
    }

    public ParserRule getAbstractComputationAssignmentTargetRule() {
        return getAbstractComputationAssignmentTargetAccess().getRule();
    }

    //AbstractProperty returns AbstractProperty:
    //    Property|PropertyAttribute | PropertyMaximun | PropertyMinimum | PropertySelection | PropertyRange;
    public UtilGrammarAccess.AbstractPropertyElements getAbstractPropertyAccess() {
        return gaUtil.getAbstractPropertyAccess();
    }

    public ParserRule getAbstractPropertyRule() {
        return getAbstractPropertyAccess().getRule();
    }

    //PropertyKind returns PropertyKind:
    //    AttributeKind | MaximumKind | MinimumKind | RangeKind | SelectionKind
    //;
    public UtilGrammarAccess.PropertyKindElements getPropertyKindAccess() {
        return gaUtil.getPropertyKindAccess();
    }

    public ParserRule getPropertyKindRule() {
        return getPropertyKindAccess().getRule();
    }

    //Property returns Property:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=PropertyKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyElements getPropertyAccess() {
        return gaUtil.getPropertyAccess();
    }

    public ParserRule getPropertyRule() {
        return getPropertyAccess().getRule();
    }

    //PropertyAttribute returns PropertyAttribute:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=AttributeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //;
    public UtilGrammarAccess.PropertyAttributeElements getPropertyAttributeAccess() {
        return gaUtil.getPropertyAttributeAccess();
    }

    public ParserRule getPropertyAttributeRule() {
        return getPropertyAttributeAccess().getRule();
    }

    //PropertyMaximun returns PropertyMaximun:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MaximumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMaximunElements getPropertyMaximunAccess() {
        return gaUtil.getPropertyMaximunAccess();
    }

    public ParserRule getPropertyMaximunRule() {
        return getPropertyMaximunAccess().getRule();
    }

    //PropertyMinimum returns PropertyMinimum:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MinimumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMinimumElements getPropertyMinimumAccess() {
        return gaUtil.getPropertyMinimumAccess();
    }

    public ParserRule getPropertyMinimumRule() {
        return getPropertyMinimumAccess().getRule();
    }

    //PropertySelection returns PropertySelection:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=SelectionKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertySelectionElements getPropertySelectionAccess() {
        return gaUtil.getPropertySelectionAccess();
    }

    public ParserRule getPropertySelectionRule() {
        return getPropertySelectionAccess().getRule();
    }

    //PropertyRange returns PropertyRange:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=RangeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            PreListElement value+=PropertyValue
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyRangeElements getPropertyRangeAccess() {
        return gaUtil.getPropertyRangeAccess();
    }

    public ParserRule getPropertyRangeRule() {
        return getPropertyRangeAccess().getRule();
    }

    //PropertyValue returns PropertyValue:
    //    PropertyValueInt | PropertyValueDouble | PropertyValueString| ProcessorArchitectureValue;
    public UtilGrammarAccess.PropertyValueElements getPropertyValueAccess() {
        return gaUtil.getPropertyValueAccess();
    }

    public ParserRule getPropertyValueRule() {
        return getPropertyValueAccess().getRule();
    }

    //PropertyValueInt returns PropertyValueInt:
    //    value=Integer0;
    public UtilGrammarAccess.PropertyValueIntElements getPropertyValueIntAccess() {
        return gaUtil.getPropertyValueIntAccess();
    }

    public ParserRule getPropertyValueIntRule() {
        return getPropertyValueIntAccess().getRule();
    }

    //PropertyValueDouble returns PropertyValueDouble:
    //    value=Double0
    //;
    public UtilGrammarAccess.PropertyValueDoubleElements getPropertyValueDoubleAccess() {
        return gaUtil.getPropertyValueDoubleAccess();
    }

    public ParserRule getPropertyValueDoubleRule() {
        return getPropertyValueDoubleAccess().getRule();
    }

    //PropertyValueString returns PropertyValueString:
    //    value=EString;
    public UtilGrammarAccess.PropertyValueStringElements getPropertyValueStringAccess() {
        return gaUtil.getPropertyValueStringAccess();
    }

    public ParserRule getPropertyValueStringRule() {
        return getPropertyValueStringAccess().getRule();
    }

    //ProcessorArchitectureValue returns ProcessorArchitectureValue:
    //    X86ProcessorArchitecture | Arm64ProcessorArchitecture
    //;
    public UtilGrammarAccess.ProcessorArchitectureValueElements getProcessorArchitectureValueAccess() {
        return gaUtil.getProcessorArchitectureValueAccess();
    }

    public ParserRule getProcessorArchitectureValueRule() {
        return getProcessorArchitectureValueAccess().getRule();
    }

    //AbstractResouceType returns AbstractResouceType:
    //    OpertingSystemType | ProcessorArchitectureType | ResourceType;
    public UtilGrammarAccess.AbstractResouceTypeElements getAbstractResouceTypeAccess() {
        return gaUtil.getAbstractResouceTypeAccess();
    }

    public ParserRule getAbstractResouceTypeRule() {
        return getAbstractResouceTypeAccess().getRule();
    }

    //OpertingSystemType returns OpertingSystemType:
    //    LinuxOpertingSystemType | MacOSOpertingSystemType
    //;
    public UtilGrammarAccess.OpertingSystemTypeElements getOpertingSystemTypeAccess() {
        return gaUtil.getOpertingSystemTypeAccess();
    }

    public ParserRule getOpertingSystemTypeRule() {
        return getOpertingSystemTypeAccess().getRule();
    }

    //ResourceType returns ResourceType:
    //    {ResourceType}
    //    name=EString
    //;
    public UtilGrammarAccess.ResourceTypeElements getResourceTypeAccess() {
        return gaUtil.getResourceTypeAccess();
    }

    public ParserRule getResourceTypeRule() {
        return getResourceTypeAccess().getRule();
    }

    //ProcessorArchitectureType returns ProcessorArchitectureType:
    //    {ProcessorArchitectureType}
    //    "ProcessorArchitecture"
    //    ;
    public UtilGrammarAccess.ProcessorArchitectureTypeElements getProcessorArchitectureTypeAccess() {
        return gaUtil.getProcessorArchitectureTypeAccess();
    }

    public ParserRule getProcessorArchitectureTypeRule() {
        return getProcessorArchitectureTypeAccess().getRule();
    }

    //AbstractCommunicationType returns AbstractCommunicationType:
    //    CommunicationType | NetworkCommunicationType
    //;
    public UtilGrammarAccess.AbstractCommunicationTypeElements getAbstractCommunicationTypeAccess() {
        return gaUtil.getAbstractCommunicationTypeAccess();
    }

    public ParserRule getAbstractCommunicationTypeRule() {
        return getAbstractCommunicationTypeAccess().getRule();
    }

    //LinuxOpertingSystemType returns LinuxOpertingSystemType:
    //    {LinuxOpertingSystemType}
    //    "Linux"
    //;
    public UtilGrammarAccess.LinuxOpertingSystemTypeElements getLinuxOpertingSystemTypeAccess() {
        return gaUtil.getLinuxOpertingSystemTypeAccess();
    }

    public ParserRule getLinuxOpertingSystemTypeRule() {
        return getLinuxOpertingSystemTypeAccess().getRule();
    }

    //MacOSOpertingSystemType returns MacOSOpertingSystemType:
    //    {MacOSOpertingSystemType}
    //    "MacOS"
    //    ;
    public UtilGrammarAccess.MacOSOpertingSystemTypeElements getMacOSOpertingSystemTypeAccess() {
        return gaUtil.getMacOSOpertingSystemTypeAccess();
    }

    public ParserRule getMacOSOpertingSystemTypeRule() {
        return getMacOSOpertingSystemTypeAccess().getRule();
    }

    //X86ProcessorArchitecture returns X86ProcessorArchitecture:
    //    {X86ProcessorArchitecture}
    //    'X86_64'
    //    ;
    public UtilGrammarAccess.X86ProcessorArchitectureElements getX86ProcessorArchitectureAccess() {
        return gaUtil.getX86ProcessorArchitectureAccess();
    }

    public ParserRule getX86ProcessorArchitectureRule() {
        return getX86ProcessorArchitectureAccess().getRule();
    }

    //Arm64ProcessorArchitecture returns Arm64ProcessorArchitecture:
    //    {Arm64ProcessorArchitecture}
    //    'Arm64'
    //    ;
    public UtilGrammarAccess.Arm64ProcessorArchitectureElements getArm64ProcessorArchitectureAccess() {
        return gaUtil.getArm64ProcessorArchitectureAccess();
    }

    public ParserRule getArm64ProcessorArchitectureRule() {
        return getArm64ProcessorArchitectureAccess().getRule();
    }

    //CommunicationType returns CommunicationType:
    //    {CommunicationType}
    //    name=EString
    //    ;
    public UtilGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
        return gaUtil.getCommunicationTypeAccess();
    }

    public ParserRule getCommunicationTypeRule() {
        return getCommunicationTypeAccess().getRule();
    }

    //NetworkCommunicationType returns NetworkCommunicationType:
    //    EthernetCommunicationType | WlanCommunicationType;
    public UtilGrammarAccess.NetworkCommunicationTypeElements getNetworkCommunicationTypeAccess() {
        return gaUtil.getNetworkCommunicationTypeAccess();
    }

    public ParserRule getNetworkCommunicationTypeRule() {
        return getNetworkCommunicationTypeAccess().getRule();
    }

    //EthernetCommunicationType returns EthernetCommunicationType:
    //    {EthernetCommunicationType}
    //    'Ethernet'
    //    ;
    public UtilGrammarAccess.EthernetCommunicationTypeElements getEthernetCommunicationTypeAccess() {
        return gaUtil.getEthernetCommunicationTypeAccess();
    }

    public ParserRule getEthernetCommunicationTypeRule() {
        return getEthernetCommunicationTypeAccess().getRule();
    }

    //WlanCommunicationType returns WlanCommunicationType:
    //    {WlanCommunicationType}
    //    'Wlan'
    //    ;
    public UtilGrammarAccess.WlanCommunicationTypeElements getWlanCommunicationTypeAccess() {
        return gaUtil.getWlanCommunicationTypeAccess();
    }

    public ParserRule getWlanCommunicationTypeRule() {
        return getWlanCommunicationTypeAccess().getRule();
    }

    //AttributeKind returns AttributeKind:
    //    {AttributeKind}
    //    'AttributeKind'
    //    ;
    public UtilGrammarAccess.AttributeKindElements getAttributeKindAccess() {
        return gaUtil.getAttributeKindAccess();
    }

    public ParserRule getAttributeKindRule() {
        return getAttributeKindAccess().getRule();
    }

    //MaximumKind returns MaximumKind:
    //    {MaximumKind}
    //    'MaximumKind'
    //    ;
    public UtilGrammarAccess.MaximumKindElements getMaximumKindAccess() {
        return gaUtil.getMaximumKindAccess();
    }

    public ParserRule getMaximumKindRule() {
        return getMaximumKindAccess().getRule();
    }

    //MinimumKind returns MinimumKind:
    //    {MinimumKind}
    //    'MinimumKind'
    //    ;
    public UtilGrammarAccess.MinimumKindElements getMinimumKindAccess() {
        return gaUtil.getMinimumKindAccess();
    }

    public ParserRule getMinimumKindRule() {
        return getMinimumKindAccess().getRule();
    }

    //SelectionKind returns SelectionKind:
    //    {SelectionKind}
    //    'SelectionKind'
    //    ;
    public UtilGrammarAccess.SelectionKindElements getSelectionKindAccess() {
        return gaUtil.getSelectionKindAccess();
    }

    public ParserRule getSelectionKindRule() {
        return getSelectionKindAccess().getRule();
    }

    //RangeKind returns RangeKind:
    //    {RangeKind}
    //    'RangeKind'
    //    ;
    public UtilGrammarAccess.RangeKindElements getRangeKindAccess() {
        return gaUtil.getRangeKindAccess();
    }

    public ParserRule getRangeKindRule() {
        return getRangeKindAccess().getRule();
    }

    //terminal DIGIT: '0'..'9';
    public TerminalRule getDIGITRule() {
        return gaUtil.getDIGITRule();
    }

    //terminal BINARY: ('0b'|'0B')('0'|'1')+;
    public TerminalRule getBINARYRule() {
        return gaUtil.getBINARYRule();
    }

    //terminal BOOLEAN: 'true'|'false';
    public TerminalRule getBOOLEANRule() {
        return gaUtil.getBOOLEANRule();
    }

    //terminal DOUBLE returns ecore::EDouble: DIGIT (('.' DECINT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DIGIT));
    public TerminalRule getDOUBLERule() {
        return gaUtil.getDOUBLERule();
    }

    //  // Use terminal to avoid 'e' turning into a keyword
    //terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
    public TerminalRule getDECINTRule() {
        return gaUtil.getDECINTRule();
    }

    //terminal DAY:'1'..'9' | '1'..'3' '0'..'9';
    public TerminalRule getDAYRule() {
        return gaUtil.getDAYRule();
    }

    //terminal MONTH:'1'..'9' | '1' '0'..'2';
    public TerminalRule getMONTHRule() {
        return gaUtil.getMONTHRule();
    }

    //terminal YEAR:'0'..'2' '0'..'9' '0'..'9' '0'..'9';
    public TerminalRule getYEARRule() {
        return gaUtil.getYEARRule();
    }

    //terminal HOUR: ('0'..'1')('0'..'9') | ('2')('0'..'3');
    public TerminalRule getHOURRule() {
        return gaUtil.getHOURRule();
    }

    //terminal MIN_SEC:('0'..'5')('0'..'9');
    public TerminalRule getMIN_SECRule() {
        return gaUtil.getMIN_SECRule();
    }

    //terminal DATE_TIME: YEAR'-'MONTH'-'DAY'T'HOUR':'MIN_SEC':'MIN_SEC;
    public TerminalRule getDATE_TIMERule() {
        return gaUtil.getDATE_TIMERule();
    }

    //Base64Binary returns type::Base64Binary:
    //    BINARY ;
    public UtilGrammarAccess.Base64BinaryElements getBase64BinaryAccess() {
        return gaUtil.getBase64BinaryAccess();
    }

    public ParserRule getBase64BinaryRule() {
        return getBase64BinaryAccess().getRule();
    }

    //boolean0 returns type::Boolean:
    //    BOOLEAN;
    public UtilGrammarAccess.Boolean0Elements getBoolean0Access() {
        return gaUtil.getBoolean0Access();
    }

    public ParserRule getBoolean0Rule() {
        return getBoolean0Access().getRule();
    }

    //Double0 returns type::Double:
    //    DOUBLE;
    public UtilGrammarAccess.Double0Elements getDouble0Access() {
        return gaUtil.getDouble0Access();
    }

    public ParserRule getDouble0Rule() {
        return getDouble0Access().getRule();
    }

    //Integer0 returns type::Int:
    //    DECINT;
    public UtilGrammarAccess.Integer0Elements getInteger0Access() {
        return gaUtil.getInteger0Access();
    }

    public ParserRule getInteger0Rule() {
        return getInteger0Access().getRule();
    }

    //EString returns ecore::EString:
    //    STRING | ID;
    public UtilGrammarAccess.EStringElements getEStringAccess() {
        return gaUtil.getEStringAccess();
    }

    public ParserRule getEStringRule() {
        return getEStringAccess().getRule();
    }

    //@Override
    //terminal SL_COMMENT: '#' !('\n'|'\r')*;
    public TerminalRule getSL_COMMENTRule() {
        return gaUtil.getSL_COMMENTRule();
    }

    //terminal INDENT: 'synthetic:INDENT';
    public TerminalRule getINDENTRule() {
        return gaUtil.getINDENTRule();
    }

    //terminal DEDENT: 'synthetic:DEDENT';
    public TerminalRule getDEDENTRule() {
        return gaUtil.getDEDENTRule();
    }

    //PreListElement hidden(SL_COMMENT):
    //  '-';
    public UtilGrammarAccess.PreListElementElements getPreListElementAccess() {
        return gaUtil.getPreListElementAccess();
    }

    public ParserRule getPreListElementRule() {
        return getPreListElementAccess().getRule();
    }

    //terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
    public TerminalRule getIDRule() {
        return gaTerminals.getIDRule();
    }

    //terminal INT returns ecore::EInt: ('0'..'9')+;
    public TerminalRule getINTRule() {
        return gaTerminals.getINTRule();
    }

    //terminal STRING:
    //            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
    //            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
    //        ;
    public TerminalRule getSTRINGRule() {
        return gaTerminals.getSTRINGRule();
    }

    //terminal ML_COMMENT : '/*' -> '*/';
    public TerminalRule getML_COMMENTRule() {
        return gaTerminals.getML_COMMENTRule();
    }

    //terminal WS         : (' '|'\t'|'\r'|'\n')+;
    public TerminalRule getWSRule() {
        return gaTerminals.getWSRule();
    }

    //terminal ANY_OTHER: .;
    public TerminalRule getANY_OTHERRule() {
        return gaTerminals.getANY_OTHERRule();
    }
}
