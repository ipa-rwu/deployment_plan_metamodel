/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.deplyoment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.deployment.services.UtilGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PlanGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {

    public class PlanElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.Plan");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cPlanAction_0 = (Action)cGroup.eContents().get(0);
        private final Assignment cPlanAssignment_1 = (Assignment)cGroup.eContents().get(1);
        private final RuleCall cPlanAbstractDeploymentPlanParserRuleCall_1_0 = (RuleCall)cPlanAssignment_1.eContents().get(0);

        //Plan returns Plan:
        //    {Plan}
        //    plan=AbstractDeploymentPlan
        //;
        @Override public ParserRule getRule() { return rule; }

        //{Plan}
        //plan=AbstractDeploymentPlan
        public Group getGroup() { return cGroup; }

        //{Plan}
        public Action getPlanAction_0() { return cPlanAction_0; }

        //plan=AbstractDeploymentPlan
        public Assignment getPlanAssignment_1() { return cPlanAssignment_1; }

        //AbstractDeploymentPlan
        public RuleCall getPlanAbstractDeploymentPlanParserRuleCall_1_0() { return cPlanAbstractDeploymentPlanParserRuleCall_1_0; }
    }
    public class AbstractDeploymentPlanElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractDeploymentPlan");
        private final RuleCall cDeploymentPlanParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractDeploymentPlan returns AbstractDeploymentPlan:
        //    DeploymentPlan
        //;
        @Override public ParserRule getRule() { return rule; }

        //DeploymentPlan
        public RuleCall getDeploymentPlanParserRuleCall() { return cDeploymentPlanParserRuleCall; }
    }
    public class DeploymentPlanElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.DeploymentPlan");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Keyword cDeploymentPlanKeyword_0 = (Keyword)cGroup.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final Keyword cDeployToKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final Assignment cDeployToAssignment_5 = (Assignment)cGroup.eContents().get(5);
        private final CrossReference cDeployToTargetDeployEnviromentCrossReference_5_0 = (CrossReference)cDeployToAssignment_5.eContents().get(0);
        private final RuleCall cDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1 = (RuleCall)cDeployToTargetDeployEnviromentCrossReference_5_0.eContents().get(1);
        private final Assignment cRealizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cRealizeAbstractRealizationParserRuleCall_6_0 = (RuleCall)cRealizeAssignment_6.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);

        //DeploymentPlan returns DeploymentPlan:
        //    'DeploymentPlan:'
        //    INDENT
        //        'name:' name=EString
        //        'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        //        realize=AbstractRealization
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //'DeploymentPlan:'
        //INDENT
        //    'name:' name=EString
        //    'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        //    realize=AbstractRealization
        //DEDENT
        public Group getGroup() { return cGroup; }

        //'DeploymentPlan:'
        public Keyword getDeploymentPlanKeyword_0() { return cDeploymentPlanKeyword_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //'deployTo:'
        public Keyword getDeployToKeyword_4() { return cDeployToKeyword_4; }

        //deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        public Assignment getDeployToAssignment_5() { return cDeployToAssignment_5; }

        //[targetEnvironment::TargetDeployEnviroment|EString]
        public CrossReference getDeployToTargetDeployEnviromentCrossReference_5_0() { return cDeployToTargetDeployEnviromentCrossReference_5_0; }

        //EString
        public RuleCall getDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1() { return cDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1; }

        //realize=AbstractRealization
        public Assignment getRealizeAssignment_6() { return cRealizeAssignment_6; }

        //AbstractRealization
        public RuleCall getRealizeAbstractRealizationParserRuleCall_6_0() { return cRealizeAbstractRealizationParserRuleCall_6_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
    }
    public class AbstractComputationAssignmentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractComputationAssignment");
        private final RuleCall cImplementationAssignmentParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractComputationAssignment returns AbstractComputationAssignment:
        //    ImplementationAssignment;
        @Override public ParserRule getRule() { return rule; }

        //ImplementationAssignment
        public RuleCall getImplementationAssignmentParserRuleCall() { return cImplementationAssignmentParserRuleCall; }
    }
    public class AbstractRealizationElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractRealization");
        private final RuleCall cRealizationParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractRealization returns AbstractRealization:
        //    Realization
        //;
        @Override public ParserRule getRule() { return rule; }

        //Realization
        public RuleCall getRealizationParserRuleCall() { return cRealizationParserRuleCall; }
    }
    public class MiddlewareElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.Middleware");
        private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
        private final RuleCall cHumbleROSDistroParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
        private final RuleCall cNoeticROSDistroParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);

        //Middleware returns Middleware:
        //    HumbleROSDistro | NoeticROSDistro;
        @Override public ParserRule getRule() { return rule; }

        //HumbleROSDistro | NoeticROSDistro
        public Alternatives getAlternatives() { return cAlternatives; }

        //HumbleROSDistro
        public RuleCall getHumbleROSDistroParserRuleCall_0() { return cHumbleROSDistroParserRuleCall_0; }

        //NoeticROSDistro
        public RuleCall getNoeticROSDistroParserRuleCall_1() { return cNoeticROSDistroParserRuleCall_1; }
    }
    public class AbstractConfigExecutionParameterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractConfigExecutionParameter");
        private final RuleCall cConfigExecutionParameterParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractConfigExecutionParameter returns AbstractConfigExecutionParameter:
        //    ConfigExecutionParameter;
        @Override public ParserRule getRule() { return rule; }

        //ConfigExecutionParameter
        public RuleCall getConfigExecutionParameterParserRuleCall() { return cConfigExecutionParameterParserRuleCall; }
    }
    public class RealizationElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.Realization");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cRealizationAction_0 = (Action)cGroup.eContents().get(0);
        private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
        private final Keyword cAssignmentKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
        private final Assignment cRealizationAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
        private final RuleCall cRealizationAbstractComputationAssignmentParserRuleCall_1_2_0 = (RuleCall)cRealizationAssignment_1_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);

        //Realization returns Realization:
        //    {Realization}
        //    (
        //    'assignment:'
        //    INDENT
        //        realization+=AbstractComputationAssignment+
        //    DEDENT
        //     )?
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{Realization}
        //(
        //'assignment:'
        //INDENT
        //    realization+=AbstractComputationAssignment+
        //DEDENT
        // )?
        public Group getGroup() { return cGroup; }

        //{Realization}
        public Action getRealizationAction_0() { return cRealizationAction_0; }

        //(
        //'assignment:'
        //INDENT
        //    realization+=AbstractComputationAssignment+
        //DEDENT
        // )?
        public Group getGroup_1() { return cGroup_1; }

        //'assignment:'
        public Keyword getAssignmentKeyword_1_0() { return cAssignmentKeyword_1_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_1() { return cINDENTTerminalRuleCall_1_1; }

        //realization+=AbstractComputationAssignment+
        public Assignment getRealizationAssignment_1_2() { return cRealizationAssignment_1_2; }

        //AbstractComputationAssignment
        public RuleCall getRealizationAbstractComputationAssignmentParserRuleCall_1_2_0() { return cRealizationAbstractComputationAssignmentParserRuleCall_1_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_3() { return cDEDENTTerminalRuleCall_1_3; }
    }
    public class ConfigSoftwareComponentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ConfigSoftwareComponent");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
        private final CrossReference cComponentAbstractComputationAssignmentTargetCrossReference_0_0 = (CrossReference)cComponentAssignment_0.eContents().get(0);
        private final RuleCall cComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1 = (RuleCall)cComponentAbstractComputationAssignmentTargetCrossReference_0_0.eContents().get(1);
        private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
        private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
        private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
        private final Keyword cExecutionConfigurationKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
        private final Assignment cExecutionConfigurationAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
        private final RuleCall cExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_2_2_0 = (RuleCall)cExecutionConfigurationAssignment_1_2_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_2_3 = (RuleCall)cGroup_1_2.eContents().get(3);
        private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
        private final Keyword cStartCommandKeyword_1_3_0 = (Keyword)cGroup_1_3.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_3_1 = (RuleCall)cGroup_1_3.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_1_3_2 = (RuleCall)cGroup_1_3.eContents().get(2);
        private final Assignment cStartCommandAssignment_1_3_3 = (Assignment)cGroup_1_3.eContents().get(3);
        private final RuleCall cStartCommandEStringParserRuleCall_1_3_3_0 = (RuleCall)cStartCommandAssignment_1_3_3.eContents().get(0);
        private final Group cGroup_1_3_4 = (Group)cGroup_1_3.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_1_3_4_0 = (RuleCall)cGroup_1_3_4.eContents().get(0);
        private final Assignment cStartCommandAssignment_1_3_4_1 = (Assignment)cGroup_1_3_4.eContents().get(1);
        private final RuleCall cStartCommandEStringParserRuleCall_1_3_4_1_0 = (RuleCall)cStartCommandAssignment_1_3_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_3_5 = (RuleCall)cGroup_1_3.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);

        //ConfigSoftwareComponent returns ConfigSoftwareComponent:
        //    component=[util::AbstractComputationAssignmentTarget| EString](":"
        //    INDENT
        //        (
        //        'executionConfiguration:'
        //            INDENT
        //             (executionConfiguration+=AbstractConfigExecutionParameter)+
        //            DEDENT
        //            )?
        //            ('startCommand:'
        //                INDENT
        //                     PreListElement startCommand+=EString
        //                (
        //                    PreListElement (startCommand+=EString)*
        //                )?
        //                DEDENT
        //            )?
        //     DEDENT
        //     )?
        //;
        @Override public ParserRule getRule() { return rule; }

        //component=[util::AbstractComputationAssignmentTarget| EString](":"
        //INDENT
        //    (
        //    'executionConfiguration:'
        //        INDENT
        //         (executionConfiguration+=AbstractConfigExecutionParameter)+
        //        DEDENT
        //        )?
        //        ('startCommand:'
        //            INDENT
        //                 PreListElement startCommand+=EString
        //            (
        //                PreListElement (startCommand+=EString)*
        //            )?
        //            DEDENT
        //        )?
        // DEDENT
        // )?
        public Group getGroup() { return cGroup; }

        //component=[util::AbstractComputationAssignmentTarget| EString]
        public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

        //[util::AbstractComputationAssignmentTarget| EString]
        public CrossReference getComponentAbstractComputationAssignmentTargetCrossReference_0_0() { return cComponentAbstractComputationAssignmentTargetCrossReference_0_0; }

        //EString
        public RuleCall getComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1() { return cComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1; }

        //(":"
        //    INDENT
        //        (
        //        'executionConfiguration:'
        //            INDENT
        //             (executionConfiguration+=AbstractConfigExecutionParameter)+
        //            DEDENT
        //            )?
        //            ('startCommand:'
        //                INDENT
        //                     PreListElement startCommand+=EString
        //                (
        //                    PreListElement (startCommand+=EString)*
        //                )?
        //                DEDENT
        //            )?
        //     DEDENT
        //     )?
        public Group getGroup_1() { return cGroup_1; }

        //":"
        public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_1() { return cINDENTTerminalRuleCall_1_1; }

        //(
        //'executionConfiguration:'
        //    INDENT
        //     (executionConfiguration+=AbstractConfigExecutionParameter)+
        //    DEDENT
        //    )?
        public Group getGroup_1_2() { return cGroup_1_2; }

        //'executionConfiguration:'
        public Keyword getExecutionConfigurationKeyword_1_2_0() { return cExecutionConfigurationKeyword_1_2_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_2_1() { return cINDENTTerminalRuleCall_1_2_1; }

        //(executionConfiguration+=AbstractConfigExecutionParameter)+
        public Assignment getExecutionConfigurationAssignment_1_2_2() { return cExecutionConfigurationAssignment_1_2_2; }

        //AbstractConfigExecutionParameter
        public RuleCall getExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_2_2_0() { return cExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_2_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_2_3() { return cDEDENTTerminalRuleCall_1_2_3; }

        //('startCommand:'
        //    INDENT
        //         PreListElement startCommand+=EString
        //    (
        //        PreListElement (startCommand+=EString)*
        //    )?
        //    DEDENT
        //)?
        public Group getGroup_1_3() { return cGroup_1_3; }

        //'startCommand:'
        public Keyword getStartCommandKeyword_1_3_0() { return cStartCommandKeyword_1_3_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_3_1() { return cINDENTTerminalRuleCall_1_3_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1_3_2() { return cPreListElementParserRuleCall_1_3_2; }

        //startCommand+=EString
        public Assignment getStartCommandAssignment_1_3_3() { return cStartCommandAssignment_1_3_3; }

        //EString
        public RuleCall getStartCommandEStringParserRuleCall_1_3_3_0() { return cStartCommandEStringParserRuleCall_1_3_3_0; }

        //(
        //    PreListElement (startCommand+=EString)*
        //)?
        public Group getGroup_1_3_4() { return cGroup_1_3_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1_3_4_0() { return cPreListElementParserRuleCall_1_3_4_0; }

        //(startCommand+=EString)*
        public Assignment getStartCommandAssignment_1_3_4_1() { return cStartCommandAssignment_1_3_4_1; }

        //EString
        public RuleCall getStartCommandEStringParserRuleCall_1_3_4_1_0() { return cStartCommandEStringParserRuleCall_1_3_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_3_5() { return cDEDENTTerminalRuleCall_1_3_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_4() { return cDEDENTTerminalRuleCall_1_4; }
    }
    public class ImplementationAssignmentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ImplementationAssignment");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cExecutedByKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cExecutedByAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final CrossReference cExecutedByComputationDeviceInstanceCrossReference_2_0 = (CrossReference)cExecutedByAssignment_2.eContents().get(0);
        private final RuleCall cExecutedByComputationDeviceInstanceEStringParserRuleCall_2_0_1 = (RuleCall)cExecutedByComputationDeviceInstanceCrossReference_2_0.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
        private final Keyword cSoftwareComponentKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final RuleCall cINDENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
        private final RuleCall cPreListElementParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
        private final Assignment cSoftwareComponentAssignment_7 = (Assignment)cGroup.eContents().get(7);
        private final RuleCall cSoftwareComponentConfigSoftwareComponentParserRuleCall_7_0 = (RuleCall)cSoftwareComponentAssignment_7.eContents().get(0);
        private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
        private final RuleCall cPreListElementParserRuleCall_8_0 = (RuleCall)cGroup_8.eContents().get(0);
        private final Assignment cSoftwareComponentAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
        private final RuleCall cSoftwareComponentConfigSoftwareComponentParserRuleCall_8_1_0 = (RuleCall)cSoftwareComponentAssignment_8_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_9 = (RuleCall)cGroup.eContents().get(9);
        private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
        private final Keyword cMiddlewareKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_10_2 = (RuleCall)cGroup_10.eContents().get(2);
        private final Assignment cMiddlewareAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
        private final RuleCall cMiddlewareMiddlewareParserRuleCall_10_3_0 = (RuleCall)cMiddlewareAssignment_10_3.eContents().get(0);
        private final Group cGroup_10_4 = (Group)cGroup_10.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_10_4_0 = (RuleCall)cGroup_10_4.eContents().get(0);
        private final Assignment cMiddlewareAssignment_10_4_1 = (Assignment)cGroup_10_4.eContents().get(1);
        private final RuleCall cMiddlewareMiddlewareParserRuleCall_10_4_1_0 = (RuleCall)cMiddlewareAssignment_10_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_10_5 = (RuleCall)cGroup_10.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);

        //ImplementationAssignment returns ImplementationAssignment:
        //        PreListElement 'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        //        INDENT
        //        'softwareComponent:'
        //            INDENT
        //                PreListElement softwareComponent+=ConfigSoftwareComponent
        //                (PreListElement softwareComponent+=ConfigSoftwareComponent)*
        //            DEDENT
        //        ('middleware:'
        //            INDENT
        //                PreListElement middleware+=Middleware
        //                ( PreListElement middleware+=Middleware)*
        //            DEDENT
        //             )?
        //        DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //PreListElement 'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        //INDENT
        //'softwareComponent:'
        //    INDENT
        //        PreListElement softwareComponent+=ConfigSoftwareComponent
        //        (PreListElement softwareComponent+=ConfigSoftwareComponent)*
        //    DEDENT
        //('middleware:'
        //    INDENT
        //        PreListElement middleware+=Middleware
        //        ( PreListElement middleware+=Middleware)*
        //    DEDENT
        //     )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //'executedBy:'
        public Keyword getExecutedByKeyword_1() { return cExecutedByKeyword_1; }

        //executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        public Assignment getExecutedByAssignment_2() { return cExecutedByAssignment_2; }

        //[targetEnvironment::ComputationDeviceInstance|EString]
        public CrossReference getExecutedByComputationDeviceInstanceCrossReference_2_0() { return cExecutedByComputationDeviceInstanceCrossReference_2_0; }

        //EString
        public RuleCall getExecutedByComputationDeviceInstanceEStringParserRuleCall_2_0_1() { return cExecutedByComputationDeviceInstanceEStringParserRuleCall_2_0_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }

        //'softwareComponent:'
        public Keyword getSoftwareComponentKeyword_4() { return cSoftwareComponentKeyword_4; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_5() { return cINDENTTerminalRuleCall_5; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_6() { return cPreListElementParserRuleCall_6; }

        //softwareComponent+=ConfigSoftwareComponent
        public Assignment getSoftwareComponentAssignment_7() { return cSoftwareComponentAssignment_7; }

        //ConfigSoftwareComponent
        public RuleCall getSoftwareComponentConfigSoftwareComponentParserRuleCall_7_0() { return cSoftwareComponentConfigSoftwareComponentParserRuleCall_7_0; }

        //(PreListElement softwareComponent+=ConfigSoftwareComponent)*
        public Group getGroup_8() { return cGroup_8; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8_0() { return cPreListElementParserRuleCall_8_0; }

        //softwareComponent+=ConfigSoftwareComponent
        public Assignment getSoftwareComponentAssignment_8_1() { return cSoftwareComponentAssignment_8_1; }

        //ConfigSoftwareComponent
        public RuleCall getSoftwareComponentConfigSoftwareComponentParserRuleCall_8_1_0() { return cSoftwareComponentConfigSoftwareComponentParserRuleCall_8_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_9() { return cDEDENTTerminalRuleCall_9; }

        //('middleware:'
        //    INDENT
        //        PreListElement middleware+=Middleware
        //        ( PreListElement middleware+=Middleware)*
        //    DEDENT
        //     )?
        public Group getGroup_10() { return cGroup_10; }

        //'middleware:'
        public Keyword getMiddlewareKeyword_10_0() { return cMiddlewareKeyword_10_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_10_1() { return cINDENTTerminalRuleCall_10_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_10_2() { return cPreListElementParserRuleCall_10_2; }

        //middleware+=Middleware
        public Assignment getMiddlewareAssignment_10_3() { return cMiddlewareAssignment_10_3; }

        //Middleware
        public RuleCall getMiddlewareMiddlewareParserRuleCall_10_3_0() { return cMiddlewareMiddlewareParserRuleCall_10_3_0; }

        //( PreListElement middleware+=Middleware)*
        public Group getGroup_10_4() { return cGroup_10_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_10_4_0() { return cPreListElementParserRuleCall_10_4_0; }

        //middleware+=Middleware
        public Assignment getMiddlewareAssignment_10_4_1() { return cMiddlewareAssignment_10_4_1; }

        //Middleware
        public RuleCall getMiddlewareMiddlewareParserRuleCall_10_4_1_0() { return cMiddlewareMiddlewareParserRuleCall_10_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_10_5() { return cDEDENTTerminalRuleCall_10_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_11() { return cDEDENTTerminalRuleCall_11; }
    }
    public class HumbleROSDistroElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.HumbleROSDistro");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cHumbleROSDistroAction_0 = (Action)cGroup.eContents().get(0);
        private final Keyword cHumbleROSDistroKeyword_1 = (Keyword)cGroup.eContents().get(1);

        //HumbleROSDistro returns HumbleROSDistro:
        //    {HumbleROSDistro}
        //    'HumbleROSDistro'
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{HumbleROSDistro}
        //'HumbleROSDistro'
        public Group getGroup() { return cGroup; }

        //{HumbleROSDistro}
        public Action getHumbleROSDistroAction_0() { return cHumbleROSDistroAction_0; }

        //'HumbleROSDistro'
        public Keyword getHumbleROSDistroKeyword_1() { return cHumbleROSDistroKeyword_1; }
    }
    public class NoeticROSDistroElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.NoeticROSDistro");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cNoeticROSDistroAction_0 = (Action)cGroup.eContents().get(0);
        private final Keyword cNoeticROSDistroKeyword_1 = (Keyword)cGroup.eContents().get(1);

        //NoeticROSDistro returns NoeticROSDistro:
        //    {NoeticROSDistro}
        //    'NoeticROSDistro'
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{NoeticROSDistro}
        //'NoeticROSDistro'
        public Group getGroup() { return cGroup; }

        //{NoeticROSDistro}
        public Action getNoeticROSDistroAction_0() { return cNoeticROSDistroAction_0; }

        //'NoeticROSDistro'
        public Keyword getNoeticROSDistroKeyword_1() { return cNoeticROSDistroKeyword_1; }
    }
    public class ConfigExecutionParameterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ConfigExecutionParameter");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cFromKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cFromAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final CrossReference cFromExecutionPropertyCrossReference_2_0 = (CrossReference)cFromAssignment_2.eContents().get(0);
        private final RuleCall cFromExecutionPropertyEStringParserRuleCall_2_0_1 = (RuleCall)cFromExecutionPropertyCrossReference_2_0.eContents().get(1);
        private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
        private final RuleCall cINDENTTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
        private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
        private final Keyword cToKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
        private final Assignment cToAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
        private final CrossReference cToAbstractConfigPropertyCrossReference_3_1_1_0 = (CrossReference)cToAssignment_3_1_1.eContents().get(0);
        private final RuleCall cToAbstractConfigPropertyEStringParserRuleCall_3_1_1_0_1 = (RuleCall)cToAbstractConfigPropertyCrossReference_3_1_1_0.eContents().get(1);
        private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
        private final Keyword cValueKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
        private final Assignment cValueAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
        private final RuleCall cValuePropertyValueParserRuleCall_3_2_1_0 = (RuleCall)cValueAssignment_3_2_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);

        //ConfigExecutionParameter returns ConfigExecutionParameter:
        //    PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
        //        (
        //        INDENT
        //            (
        //            'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //            )?
        //            (
        //            'value:' value=PropertyValue
        //            )?
        //        DEDENT
        //        )?
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
        //    (
        //    INDENT
        //        (
        //        'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //        )?
        //        (
        //        'value:' value=PropertyValue
        //        )?
        //    DEDENT
        //    )?
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //'from:'
        public Keyword getFromKeyword_1() { return cFromKeyword_1; }

        //from=[implementationDescription::ExecutionProperty|EString]
        public Assignment getFromAssignment_2() { return cFromAssignment_2; }

        //[implementationDescription::ExecutionProperty|EString]
        public CrossReference getFromExecutionPropertyCrossReference_2_0() { return cFromExecutionPropertyCrossReference_2_0; }

        //EString
        public RuleCall getFromExecutionPropertyEStringParserRuleCall_2_0_1() { return cFromExecutionPropertyEStringParserRuleCall_2_0_1; }

        //(
        //INDENT
        //    (
        //    'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //    )?
        //    (
        //    'value:' value=PropertyValue
        //    )?
        //DEDENT
        //)?
        public Group getGroup_3() { return cGroup_3; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3_0() { return cINDENTTerminalRuleCall_3_0; }

        //(
        //'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //)?
        public Group getGroup_3_1() { return cGroup_3_1; }

        //'to:'
        public Keyword getToKeyword_3_1_0() { return cToKeyword_3_1_0; }

        //to=[targetEnvironment::AbstractConfigProperty|EString]
        public Assignment getToAssignment_3_1_1() { return cToAssignment_3_1_1; }

        //[targetEnvironment::AbstractConfigProperty|EString]
        public CrossReference getToAbstractConfigPropertyCrossReference_3_1_1_0() { return cToAbstractConfigPropertyCrossReference_3_1_1_0; }

        //EString
        public RuleCall getToAbstractConfigPropertyEStringParserRuleCall_3_1_1_0_1() { return cToAbstractConfigPropertyEStringParserRuleCall_3_1_1_0_1; }

        //(
        //'value:' value=PropertyValue
        //)?
        public Group getGroup_3_2() { return cGroup_3_2; }

        //'value:'
        public Keyword getValueKeyword_3_2_0() { return cValueKeyword_3_2_0; }

        //value=PropertyValue
        public Assignment getValueAssignment_3_2_1() { return cValueAssignment_3_2_1; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_3_2_1_0() { return cValuePropertyValueParserRuleCall_3_2_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_3_3() { return cDEDENTTerminalRuleCall_3_3; }
    }


    private final PlanElements pPlan;
    private final AbstractDeploymentPlanElements pAbstractDeploymentPlan;
    private final DeploymentPlanElements pDeploymentPlan;
    private final AbstractComputationAssignmentElements pAbstractComputationAssignment;
    private final AbstractRealizationElements pAbstractRealization;
    private final MiddlewareElements pMiddleware;
    private final AbstractConfigExecutionParameterElements pAbstractConfigExecutionParameter;
    private final RealizationElements pRealization;
    private final ConfigSoftwareComponentElements pConfigSoftwareComponent;
    private final ImplementationAssignmentElements pImplementationAssignment;
    private final HumbleROSDistroElements pHumbleROSDistro;
    private final NoeticROSDistroElements pNoeticROSDistro;
    private final ConfigExecutionParameterElements pConfigExecutionParameter;

    private final Grammar grammar;

    private final UtilGrammarAccess gaUtil;

    private final TerminalsGrammarAccess gaTerminals;

    @Inject
    public PlanGrammarAccess(GrammarProvider grammarProvider,
            UtilGrammarAccess gaUtil,
            TerminalsGrammarAccess gaTerminals) {
        this.grammar = internalFindGrammar(grammarProvider);
        this.gaUtil = gaUtil;
        this.gaTerminals = gaTerminals;
        this.pPlan = new PlanElements();
        this.pAbstractDeploymentPlan = new AbstractDeploymentPlanElements();
        this.pDeploymentPlan = new DeploymentPlanElements();
        this.pAbstractComputationAssignment = new AbstractComputationAssignmentElements();
        this.pAbstractRealization = new AbstractRealizationElements();
        this.pMiddleware = new MiddlewareElements();
        this.pAbstractConfigExecutionParameter = new AbstractConfigExecutionParameterElements();
        this.pRealization = new RealizationElements();
        this.pConfigSoftwareComponent = new ConfigSoftwareComponentElements();
        this.pImplementationAssignment = new ImplementationAssignmentElements();
        this.pHumbleROSDistro = new HumbleROSDistroElements();
        this.pNoeticROSDistro = new NoeticROSDistroElements();
        this.pConfigExecutionParameter = new ConfigExecutionParameterElements();
    }

    protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
        Grammar grammar = grammarProvider.getGrammar(this);
        while (grammar != null) {
            if ("de.fraunhofer.ipa.deplyoment.Plan".equals(grammar.getName())) {
                return grammar;
            }
            List<Grammar> grammars = grammar.getUsedGrammars();
            if (!grammars.isEmpty()) {
                grammar = grammars.iterator().next();
            } else {
                return null;
            }
        }
        return grammar;
    }

    @Override
    public Grammar getGrammar() {
        return grammar;
    }


    public UtilGrammarAccess getUtilGrammarAccess() {
        return gaUtil;
    }

    public TerminalsGrammarAccess getTerminalsGrammarAccess() {
        return gaTerminals;
    }


    //Plan returns Plan:
    //    {Plan}
    //    plan=AbstractDeploymentPlan
    //;
    public PlanElements getPlanAccess() {
        return pPlan;
    }

    public ParserRule getPlanRule() {
        return getPlanAccess().getRule();
    }

    //AbstractDeploymentPlan returns AbstractDeploymentPlan:
    //    DeploymentPlan
    //;
    public AbstractDeploymentPlanElements getAbstractDeploymentPlanAccess() {
        return pAbstractDeploymentPlan;
    }

    public ParserRule getAbstractDeploymentPlanRule() {
        return getAbstractDeploymentPlanAccess().getRule();
    }

    //DeploymentPlan returns DeploymentPlan:
    //    'DeploymentPlan:'
    //    INDENT
    //        'name:' name=EString
    //        'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
    //        realize=AbstractRealization
    //    DEDENT
    //    ;
    public DeploymentPlanElements getDeploymentPlanAccess() {
        return pDeploymentPlan;
    }

    public ParserRule getDeploymentPlanRule() {
        return getDeploymentPlanAccess().getRule();
    }

    //AbstractComputationAssignment returns AbstractComputationAssignment:
    //    ImplementationAssignment;
    public AbstractComputationAssignmentElements getAbstractComputationAssignmentAccess() {
        return pAbstractComputationAssignment;
    }

    public ParserRule getAbstractComputationAssignmentRule() {
        return getAbstractComputationAssignmentAccess().getRule();
    }

    //AbstractRealization returns AbstractRealization:
    //    Realization
    //;
    public AbstractRealizationElements getAbstractRealizationAccess() {
        return pAbstractRealization;
    }

    public ParserRule getAbstractRealizationRule() {
        return getAbstractRealizationAccess().getRule();
    }

    //Middleware returns Middleware:
    //    HumbleROSDistro | NoeticROSDistro;
    public MiddlewareElements getMiddlewareAccess() {
        return pMiddleware;
    }

    public ParserRule getMiddlewareRule() {
        return getMiddlewareAccess().getRule();
    }

    //AbstractConfigExecutionParameter returns AbstractConfigExecutionParameter:
    //    ConfigExecutionParameter;
    public AbstractConfigExecutionParameterElements getAbstractConfigExecutionParameterAccess() {
        return pAbstractConfigExecutionParameter;
    }

    public ParserRule getAbstractConfigExecutionParameterRule() {
        return getAbstractConfigExecutionParameterAccess().getRule();
    }

    //Realization returns Realization:
    //    {Realization}
    //    (
    //    'assignment:'
    //    INDENT
    //        realization+=AbstractComputationAssignment+
    //    DEDENT
    //     )?
    //    ;
    public RealizationElements getRealizationAccess() {
        return pRealization;
    }

    public ParserRule getRealizationRule() {
        return getRealizationAccess().getRule();
    }

    //ConfigSoftwareComponent returns ConfigSoftwareComponent:
    //    component=[util::AbstractComputationAssignmentTarget| EString](":"
    //    INDENT
    //        (
    //        'executionConfiguration:'
    //            INDENT
    //             (executionConfiguration+=AbstractConfigExecutionParameter)+
    //            DEDENT
    //            )?
    //            ('startCommand:'
    //                INDENT
    //                     PreListElement startCommand+=EString
    //                (
    //                    PreListElement (startCommand+=EString)*
    //                )?
    //                DEDENT
    //            )?
    //     DEDENT
    //     )?
    //;
    public ConfigSoftwareComponentElements getConfigSoftwareComponentAccess() {
        return pConfigSoftwareComponent;
    }

    public ParserRule getConfigSoftwareComponentRule() {
        return getConfigSoftwareComponentAccess().getRule();
    }

    //ImplementationAssignment returns ImplementationAssignment:
    //        PreListElement 'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
    //        INDENT
    //        'softwareComponent:'
    //            INDENT
    //                PreListElement softwareComponent+=ConfigSoftwareComponent
    //                (PreListElement softwareComponent+=ConfigSoftwareComponent)*
    //            DEDENT
    //        ('middleware:'
    //            INDENT
    //                PreListElement middleware+=Middleware
    //                ( PreListElement middleware+=Middleware)*
    //            DEDENT
    //             )?
    //        DEDENT
    //    ;
    public ImplementationAssignmentElements getImplementationAssignmentAccess() {
        return pImplementationAssignment;
    }

    public ParserRule getImplementationAssignmentRule() {
        return getImplementationAssignmentAccess().getRule();
    }

    //HumbleROSDistro returns HumbleROSDistro:
    //    {HumbleROSDistro}
    //    'HumbleROSDistro'
    //    ;
    public HumbleROSDistroElements getHumbleROSDistroAccess() {
        return pHumbleROSDistro;
    }

    public ParserRule getHumbleROSDistroRule() {
        return getHumbleROSDistroAccess().getRule();
    }

    //NoeticROSDistro returns NoeticROSDistro:
    //    {NoeticROSDistro}
    //    'NoeticROSDistro'
    //    ;
    public NoeticROSDistroElements getNoeticROSDistroAccess() {
        return pNoeticROSDistro;
    }

    public ParserRule getNoeticROSDistroRule() {
        return getNoeticROSDistroAccess().getRule();
    }

    //ConfigExecutionParameter returns ConfigExecutionParameter:
    //    PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
    //        (
    //        INDENT
    //            (
    //            'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
    //            )?
    //            (
    //            'value:' value=PropertyValue
    //            )?
    //        DEDENT
    //        )?
    //    ;
    public ConfigExecutionParameterElements getConfigExecutionParameterAccess() {
        return pConfigExecutionParameter;
    }

    public ParserRule getConfigExecutionParameterRule() {
        return getConfigExecutionParameterAccess().getRule();
    }

    //Description returns Description:
    //    {Description}
    //;
    public UtilGrammarAccess.DescriptionElements getDescriptionAccess() {
        return gaUtil.getDescriptionAccess();
    }

    public ParserRule getDescriptionRule() {
        return getDescriptionAccess().getRule();
    }

    //AbstractComputationAssignmentTarget returns AbstractComputationAssignmentTarget:
    //    {AbstractComputationAssignmentTarget}
    //;
    public UtilGrammarAccess.AbstractComputationAssignmentTargetElements getAbstractComputationAssignmentTargetAccess() {
        return gaUtil.getAbstractComputationAssignmentTargetAccess();
    }

    public ParserRule getAbstractComputationAssignmentTargetRule() {
        return getAbstractComputationAssignmentTargetAccess().getRule();
    }

    //AbstractProperty returns AbstractProperty:
    //    Property|PropertyAttribute | PropertyMaximun | PropertyMinimum | PropertySelection | PropertyRange;
    public UtilGrammarAccess.AbstractPropertyElements getAbstractPropertyAccess() {
        return gaUtil.getAbstractPropertyAccess();
    }

    public ParserRule getAbstractPropertyRule() {
        return getAbstractPropertyAccess().getRule();
    }

    //PropertyKind returns PropertyKind:
    //    AttributeKind | MaximumKind | MinimumKind | RangeKind | SelectionKind
    //;
    public UtilGrammarAccess.PropertyKindElements getPropertyKindAccess() {
        return gaUtil.getPropertyKindAccess();
    }

    public ParserRule getPropertyKindRule() {
        return getPropertyKindAccess().getRule();
    }

    //Property returns Property:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=PropertyKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyElements getPropertyAccess() {
        return gaUtil.getPropertyAccess();
    }

    public ParserRule getPropertyRule() {
        return getPropertyAccess().getRule();
    }

    //PropertyAttribute returns PropertyAttribute:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=AttributeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //;
    public UtilGrammarAccess.PropertyAttributeElements getPropertyAttributeAccess() {
        return gaUtil.getPropertyAttributeAccess();
    }

    public ParserRule getPropertyAttributeRule() {
        return getPropertyAttributeAccess().getRule();
    }

    //PropertyMaximun returns PropertyMaximun:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MaximumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMaximunElements getPropertyMaximunAccess() {
        return gaUtil.getPropertyMaximunAccess();
    }

    public ParserRule getPropertyMaximunRule() {
        return getPropertyMaximunAccess().getRule();
    }

    //PropertyMinimum returns PropertyMinimum:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MinimumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMinimumElements getPropertyMinimumAccess() {
        return gaUtil.getPropertyMinimumAccess();
    }

    public ParserRule getPropertyMinimumRule() {
        return getPropertyMinimumAccess().getRule();
    }

    //PropertySelection returns PropertySelection:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=SelectionKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertySelectionElements getPropertySelectionAccess() {
        return gaUtil.getPropertySelectionAccess();
    }

    public ParserRule getPropertySelectionRule() {
        return getPropertySelectionAccess().getRule();
    }

    //PropertyRange returns PropertyRange:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=RangeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            PreListElement value+=PropertyValue
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyRangeElements getPropertyRangeAccess() {
        return gaUtil.getPropertyRangeAccess();
    }

    public ParserRule getPropertyRangeRule() {
        return getPropertyRangeAccess().getRule();
    }

    //PropertyValue returns PropertyValue:
    //    PropertyValueInt | PropertyValueDouble | PropertyValueString| ProcessorArchitectureValue;
    public UtilGrammarAccess.PropertyValueElements getPropertyValueAccess() {
        return gaUtil.getPropertyValueAccess();
    }

    public ParserRule getPropertyValueRule() {
        return getPropertyValueAccess().getRule();
    }

    //PropertyValueInt returns PropertyValueInt:
    //    value=Integer0;
    public UtilGrammarAccess.PropertyValueIntElements getPropertyValueIntAccess() {
        return gaUtil.getPropertyValueIntAccess();
    }

    public ParserRule getPropertyValueIntRule() {
        return getPropertyValueIntAccess().getRule();
    }

    //PropertyValueDouble returns PropertyValueDouble:
    //    value=Double0
    //;
    public UtilGrammarAccess.PropertyValueDoubleElements getPropertyValueDoubleAccess() {
        return gaUtil.getPropertyValueDoubleAccess();
    }

    public ParserRule getPropertyValueDoubleRule() {
        return getPropertyValueDoubleAccess().getRule();
    }

    //PropertyValueString returns PropertyValueString:
    //    value=EString;
    public UtilGrammarAccess.PropertyValueStringElements getPropertyValueStringAccess() {
        return gaUtil.getPropertyValueStringAccess();
    }

    public ParserRule getPropertyValueStringRule() {
        return getPropertyValueStringAccess().getRule();
    }

    //ProcessorArchitectureValue returns ProcessorArchitectureValue:
    //    X86ProcessorArchitecture | Arm64ProcessorArchitecture
    //;
    public UtilGrammarAccess.ProcessorArchitectureValueElements getProcessorArchitectureValueAccess() {
        return gaUtil.getProcessorArchitectureValueAccess();
    }

    public ParserRule getProcessorArchitectureValueRule() {
        return getProcessorArchitectureValueAccess().getRule();
    }

    //AbstractResouceType returns AbstractResouceType:
    //    OpertingSystemType | ProcessorArchitectureType | ResourceType;
    public UtilGrammarAccess.AbstractResouceTypeElements getAbstractResouceTypeAccess() {
        return gaUtil.getAbstractResouceTypeAccess();
    }

    public ParserRule getAbstractResouceTypeRule() {
        return getAbstractResouceTypeAccess().getRule();
    }

    //OpertingSystemType returns OpertingSystemType:
    //    LinuxOpertingSystemType | MacOSOpertingSystemType
    //;
    public UtilGrammarAccess.OpertingSystemTypeElements getOpertingSystemTypeAccess() {
        return gaUtil.getOpertingSystemTypeAccess();
    }

    public ParserRule getOpertingSystemTypeRule() {
        return getOpertingSystemTypeAccess().getRule();
    }

    //ResourceType returns ResourceType:
    //    {ResourceType}
    //    name=EString
    //;
    public UtilGrammarAccess.ResourceTypeElements getResourceTypeAccess() {
        return gaUtil.getResourceTypeAccess();
    }

    public ParserRule getResourceTypeRule() {
        return getResourceTypeAccess().getRule();
    }

    //ProcessorArchitectureType returns ProcessorArchitectureType:
    //    {ProcessorArchitectureType}
    //    "ProcessorArchitecture"
    //    ;
    public UtilGrammarAccess.ProcessorArchitectureTypeElements getProcessorArchitectureTypeAccess() {
        return gaUtil.getProcessorArchitectureTypeAccess();
    }

    public ParserRule getProcessorArchitectureTypeRule() {
        return getProcessorArchitectureTypeAccess().getRule();
    }

    //AbstractCommunicationType returns AbstractCommunicationType:
    //    CommunicationType | NetworkCommunicationType
    //;
    public UtilGrammarAccess.AbstractCommunicationTypeElements getAbstractCommunicationTypeAccess() {
        return gaUtil.getAbstractCommunicationTypeAccess();
    }

    public ParserRule getAbstractCommunicationTypeRule() {
        return getAbstractCommunicationTypeAccess().getRule();
    }

    //LinuxOpertingSystemType returns LinuxOpertingSystemType:
    //    {LinuxOpertingSystemType}
    //    "Linux"
    //;
    public UtilGrammarAccess.LinuxOpertingSystemTypeElements getLinuxOpertingSystemTypeAccess() {
        return gaUtil.getLinuxOpertingSystemTypeAccess();
    }

    public ParserRule getLinuxOpertingSystemTypeRule() {
        return getLinuxOpertingSystemTypeAccess().getRule();
    }

    //MacOSOpertingSystemType returns MacOSOpertingSystemType:
    //    {MacOSOpertingSystemType}
    //    "MacOS"
    //    ;
    public UtilGrammarAccess.MacOSOpertingSystemTypeElements getMacOSOpertingSystemTypeAccess() {
        return gaUtil.getMacOSOpertingSystemTypeAccess();
    }

    public ParserRule getMacOSOpertingSystemTypeRule() {
        return getMacOSOpertingSystemTypeAccess().getRule();
    }

    //X86ProcessorArchitecture returns X86ProcessorArchitecture:
    //    {X86ProcessorArchitecture}
    //    'X86_64'
    //    ;
    public UtilGrammarAccess.X86ProcessorArchitectureElements getX86ProcessorArchitectureAccess() {
        return gaUtil.getX86ProcessorArchitectureAccess();
    }

    public ParserRule getX86ProcessorArchitectureRule() {
        return getX86ProcessorArchitectureAccess().getRule();
    }

    //Arm64ProcessorArchitecture returns Arm64ProcessorArchitecture:
    //    {Arm64ProcessorArchitecture}
    //    'Arm64'
    //    ;
    public UtilGrammarAccess.Arm64ProcessorArchitectureElements getArm64ProcessorArchitectureAccess() {
        return gaUtil.getArm64ProcessorArchitectureAccess();
    }

    public ParserRule getArm64ProcessorArchitectureRule() {
        return getArm64ProcessorArchitectureAccess().getRule();
    }

    //CommunicationType returns CommunicationType:
    //    {CommunicationType}
    //    name=EString
    //    ;
    public UtilGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
        return gaUtil.getCommunicationTypeAccess();
    }

    public ParserRule getCommunicationTypeRule() {
        return getCommunicationTypeAccess().getRule();
    }

    //NetworkCommunicationType returns NetworkCommunicationType:
    //    EthernetCommunicationType | WlanCommunicationType;
    public UtilGrammarAccess.NetworkCommunicationTypeElements getNetworkCommunicationTypeAccess() {
        return gaUtil.getNetworkCommunicationTypeAccess();
    }

    public ParserRule getNetworkCommunicationTypeRule() {
        return getNetworkCommunicationTypeAccess().getRule();
    }

    //EthernetCommunicationType returns EthernetCommunicationType:
    //    {EthernetCommunicationType}
    //    'Ethernet'
    //    ;
    public UtilGrammarAccess.EthernetCommunicationTypeElements getEthernetCommunicationTypeAccess() {
        return gaUtil.getEthernetCommunicationTypeAccess();
    }

    public ParserRule getEthernetCommunicationTypeRule() {
        return getEthernetCommunicationTypeAccess().getRule();
    }

    //WlanCommunicationType returns WlanCommunicationType:
    //    {WlanCommunicationType}
    //    'Wlan'
    //    ;
    public UtilGrammarAccess.WlanCommunicationTypeElements getWlanCommunicationTypeAccess() {
        return gaUtil.getWlanCommunicationTypeAccess();
    }

    public ParserRule getWlanCommunicationTypeRule() {
        return getWlanCommunicationTypeAccess().getRule();
    }

    //AttributeKind returns AttributeKind:
    //    {AttributeKind}
    //    'AttributeKind'
    //    ;
    public UtilGrammarAccess.AttributeKindElements getAttributeKindAccess() {
        return gaUtil.getAttributeKindAccess();
    }

    public ParserRule getAttributeKindRule() {
        return getAttributeKindAccess().getRule();
    }

    //MaximumKind returns MaximumKind:
    //    {MaximumKind}
    //    'MaximumKind'
    //    ;
    public UtilGrammarAccess.MaximumKindElements getMaximumKindAccess() {
        return gaUtil.getMaximumKindAccess();
    }

    public ParserRule getMaximumKindRule() {
        return getMaximumKindAccess().getRule();
    }

    //MinimumKind returns MinimumKind:
    //    {MinimumKind}
    //    'MinimumKind'
    //    ;
    public UtilGrammarAccess.MinimumKindElements getMinimumKindAccess() {
        return gaUtil.getMinimumKindAccess();
    }

    public ParserRule getMinimumKindRule() {
        return getMinimumKindAccess().getRule();
    }

    //SelectionKind returns SelectionKind:
    //    {SelectionKind}
    //    'SelectionKind'
    //    ;
    public UtilGrammarAccess.SelectionKindElements getSelectionKindAccess() {
        return gaUtil.getSelectionKindAccess();
    }

    public ParserRule getSelectionKindRule() {
        return getSelectionKindAccess().getRule();
    }

    //RangeKind returns RangeKind:
    //    {RangeKind}
    //    'RangeKind'
    //    ;
    public UtilGrammarAccess.RangeKindElements getRangeKindAccess() {
        return gaUtil.getRangeKindAccess();
    }

    public ParserRule getRangeKindRule() {
        return getRangeKindAccess().getRule();
    }

    //terminal DIGIT: '0'..'9';
    public TerminalRule getDIGITRule() {
        return gaUtil.getDIGITRule();
    }

    //terminal BINARY: ('0b'|'0B')('0'|'1')+;
    public TerminalRule getBINARYRule() {
        return gaUtil.getBINARYRule();
    }

    //terminal BOOLEAN: 'true'|'false';
    public TerminalRule getBOOLEANRule() {
        return gaUtil.getBOOLEANRule();
    }

    //terminal DOUBLE returns ecore::EDouble: DIGIT (('.' DECINT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DIGIT));
    public TerminalRule getDOUBLERule() {
        return gaUtil.getDOUBLERule();
    }

    //  // Use terminal to avoid 'e' turning into a keyword
    //terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
    public TerminalRule getDECINTRule() {
        return gaUtil.getDECINTRule();
    }

    //terminal DAY:'1'..'9' | '1'..'3' '0'..'9';
    public TerminalRule getDAYRule() {
        return gaUtil.getDAYRule();
    }

    //terminal MONTH:'1'..'9' | '1' '0'..'2';
    public TerminalRule getMONTHRule() {
        return gaUtil.getMONTHRule();
    }

    //terminal YEAR:'0'..'2' '0'..'9' '0'..'9' '0'..'9';
    public TerminalRule getYEARRule() {
        return gaUtil.getYEARRule();
    }

    //terminal HOUR: ('0'..'1')('0'..'9') | ('2')('0'..'3');
    public TerminalRule getHOURRule() {
        return gaUtil.getHOURRule();
    }

    //terminal MIN_SEC:('0'..'5')('0'..'9');
    public TerminalRule getMIN_SECRule() {
        return gaUtil.getMIN_SECRule();
    }

    //terminal DATE_TIME: YEAR'-'MONTH'-'DAY'T'HOUR':'MIN_SEC':'MIN_SEC;
    public TerminalRule getDATE_TIMERule() {
        return gaUtil.getDATE_TIMERule();
    }

    //Base64Binary returns type::Base64Binary:
    //    BINARY ;
    public UtilGrammarAccess.Base64BinaryElements getBase64BinaryAccess() {
        return gaUtil.getBase64BinaryAccess();
    }

    public ParserRule getBase64BinaryRule() {
        return getBase64BinaryAccess().getRule();
    }

    //boolean0 returns type::Boolean:
    //    BOOLEAN;
    public UtilGrammarAccess.Boolean0Elements getBoolean0Access() {
        return gaUtil.getBoolean0Access();
    }

    public ParserRule getBoolean0Rule() {
        return getBoolean0Access().getRule();
    }

    //Double0 returns type::Double:
    //    DOUBLE;
    public UtilGrammarAccess.Double0Elements getDouble0Access() {
        return gaUtil.getDouble0Access();
    }

    public ParserRule getDouble0Rule() {
        return getDouble0Access().getRule();
    }

    //Integer0 returns type::Int:
    //    DECINT;
    public UtilGrammarAccess.Integer0Elements getInteger0Access() {
        return gaUtil.getInteger0Access();
    }

    public ParserRule getInteger0Rule() {
        return getInteger0Access().getRule();
    }

    //EString returns ecore::EString:
    //    STRING | ID;
    public UtilGrammarAccess.EStringElements getEStringAccess() {
        return gaUtil.getEStringAccess();
    }

    public ParserRule getEStringRule() {
        return getEStringAccess().getRule();
    }

    //@Override
    //terminal SL_COMMENT: '#' !('\n'|'\r')*;
    public TerminalRule getSL_COMMENTRule() {
        return gaUtil.getSL_COMMENTRule();
    }

    //terminal INDENT: 'synthetic:INDENT';
    public TerminalRule getINDENTRule() {
        return gaUtil.getINDENTRule();
    }

    //terminal DEDENT: 'synthetic:DEDENT';
    public TerminalRule getDEDENTRule() {
        return gaUtil.getDEDENTRule();
    }

    //PreListElement hidden(SL_COMMENT):
    //  '-';
    public UtilGrammarAccess.PreListElementElements getPreListElementAccess() {
        return gaUtil.getPreListElementAccess();
    }

    public ParserRule getPreListElementRule() {
        return getPreListElementAccess().getRule();
    }

    //terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
    public TerminalRule getIDRule() {
        return gaTerminals.getIDRule();
    }

    //terminal INT returns ecore::EInt: ('0'..'9')+;
    public TerminalRule getINTRule() {
        return gaTerminals.getINTRule();
    }

    //terminal STRING:
    //            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
    //            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
    //        ;
    public TerminalRule getSTRINGRule() {
        return gaTerminals.getSTRINGRule();
    }

    //terminal ML_COMMENT : '/*' -> '*/';
    public TerminalRule getML_COMMENTRule() {
        return gaTerminals.getML_COMMENTRule();
    }

    //terminal WS         : (' '|'\t'|'\r'|'\n')+;
    public TerminalRule getWSRule() {
        return gaTerminals.getWSRule();
    }

    //terminal ANY_OTHER: .;
    public TerminalRule getANY_OTHERRule() {
        return gaTerminals.getANY_OTHERRule();
    }
}
