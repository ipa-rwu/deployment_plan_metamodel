module de.fraunhofer.ipa.deployment.GeneratePlanWithRosmodel

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {

  component = XtextGenerator {
    configuration = {
      project = StandardProjectConfig {
        baseName = "de.fraunhofer.ipa.deployment.planros.xtext"
        rootPath = rootPath
        runtimeTest = {
          enabled = true
        }
        eclipsePlugin = {
          enabled = true
        }
        eclipsePluginTest = {
          enabled = true
        }
        createEclipseMetaData = true
      }
      code = {
        encoding = "UTF-8"
        lineDelimiter = "\n"
        fileHeader = "/*\n * generated by Xtext \${version}\n */"
        preferXtendStubs = false
      }
    }
    language = StandardLanguage {
      name = "de.fraunhofer.ipa.deployment.PlanWithRosmodel"
      fileExtensions = "planros"
      referencedResource = "platform:/resource/de.fraunhofer.ipa.deploymentPlan/model/deployPlanWithRosModel.genmodel"
      referencedResource = "platform:/resource/de.fraunhofer.ipa.deploymentPlan/model/deploymentPlan.genmodel"
//      referencedResource = "platform:/resource/de.fraunhofer.ipa.ros.xtext/src/de/fraunhofer/ipa/ros/Basics.xtext"

      fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

      formatter = {
        generateStub = true
        generateXtendStub = true
      }

      serializer = {
        generateStub = false
      }
      validator = {
        // composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
        // Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
        generateDeprecationValidation = true
      }
      generator = {
        generateXtendStub = true
      }
      junitSupport = {
        junitVersion = "5"
      }
    }
  }
}
