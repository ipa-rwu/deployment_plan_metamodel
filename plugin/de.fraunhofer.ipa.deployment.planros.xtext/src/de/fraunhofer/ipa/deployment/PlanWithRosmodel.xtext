// automatically generated by Xtext
grammar de.fraunhofer.ipa.deployment.PlanWithRosmodel with de.fraunhofer.ipa.deployment.Plan

import "http://www.ipa.fraunhofer.de/DeployPlanWithRosModel"
import "http://www.ipa.fraunhofer.de/ImplementationDescription" as implementationDescription
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ipa.fraunhofer.de/Util" as util
import "http://www.ipa.fraunhofer.de/TargetEnvironment" as targetEnvironment
import "http://www.ipa.fraunhofer.de/DeploymentPlan" as deploymentPlan
import "http://www.ipa.fraunhofer.de/rossystem" as rossystem
import "http://www.ipa.fraunhofer.de/ros" as ros


DeploymentPlanWithRosModel returns DeployRossystemPlan:
    'DeploymentPlanWithRos:'
    INDENT
        'name:' name=EString
        ('targetRossystem:' targetRossystem = [rossystem::System|EString])?
        'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        realize=AbstractRealization
    DEDENT
;

@Override
AbstarctConfigSoftwareComponent returns deploymentPlan::AbstarctConfigSoftwareComponent:
    ConfigRosSoftwareComponent
;

ConfigRosSoftwareComponent returns ConfigRosSoftwareComponent:
    {ConfigRosSoftwareComponent}
    component=[rossystem::Component|EString] (":"
    INDENT
        (
        'executionConfiguration:'
            INDENT
            (executionConfiguration+=ConfigRosParameter)+
            DEDENT
            )?
            ('startCommand:'
                INDENT
                    PreListElement startCommand+=EString
                    (PreListElement startCommand+=EString)*
                DEDENT
            )?
     DEDENT
     )?

;


@Override
AbstractComputationAssignment returns deploymentPlan::AbstractComputationAssignment:
    RossystemImplementationAssignment;

RossystemImplementationAssignment returns RossystemImplementationAssignment:
    PreListElement 'name:' name = EString
    INDENT
    'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
    'version:' version = EString
    'middleware:' middleware=Middleware
    'softwareComponents:'
        INDENT
            PreListElement softwareComponents+= ConfigRosSoftwareComponent
            (PreListElement softwareComponents+=ConfigRosSoftwareComponent)*
        DEDENT
        ('runtimeType:' runtimeType=AbstractRuntime)?
    DEDENT
;


ConfigRosParameter returns ConfigRosParameter:
    {ConfigRosParameter}
    PreListElement ('refSysParam:' refSysParam=[ros::Parameter|EString])?
    ('refNodeParam:' refNodeParam=[rossystem::RosParameter|EString])?
        (
        INDENT
            ('to:' to=[targetEnvironment::AbstractConfigProperty|EString])?
            (
            'value:' value= PropertyValue
            )?
        DEDENT
        )?
;
