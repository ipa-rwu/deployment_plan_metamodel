/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.targetEnvironment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TargetEnvironmentGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {

    public class TargetEnvironmentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.TargetEnvironment");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cTargetEnvironmentAction_0 = (Action)cGroup.eContents().get(0);
        private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
        private final RuleCall cTypeDescriptionParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);

        //TargetEnvironment returns TargetEnvironment:
        //    {TargetEnvironment}
        //    type+=Description
        //;
        @Override public ParserRule getRule() { return rule; }

        //{TargetEnvironment}
        //type+=Description
        public Group getGroup() { return cGroup; }

        //{TargetEnvironment}
        public Action getTargetEnvironmentAction_0() { return cTargetEnvironmentAction_0; }

        //type+=Description
        public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

        //Description
        public RuleCall getTypeDescriptionParserRuleCall_1_0() { return cTypeDescriptionParserRuleCall_1_0; }
    }
    public class DescriptionElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.Description");
        private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
        private final RuleCall cDeviceSetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
        private final RuleCall cTargetDeployEnviromentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);

        //@Override
        //Description returns base::Description:
        //    DeviceSet | TargetDeployEnviroment
        //;
        @Override public ParserRule getRule() { return rule; }

        //DeviceSet | TargetDeployEnviroment
        public Alternatives getAlternatives() { return cAlternatives; }

        //DeviceSet
        public RuleCall getDeviceSetParserRuleCall_0() { return cDeviceSetParserRuleCall_0; }

        //TargetDeployEnviroment
        public RuleCall getTargetDeployEnviromentParserRuleCall_1() { return cTargetDeployEnviromentParserRuleCall_1; }
    }
    public class TargetDeployEnviromentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.TargetDeployEnviroment");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cTargetDeployEnviromentAction_0 = (Action)cGroup.eContents().get(0);
        private final Keyword cTargetDeployEnviromentKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
        private final Keyword cNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
        private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
        private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
        private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
        private final Keyword cIncludeDeviceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
        private final Assignment cIncludeDeviceAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
        private final RuleCall cIncludeDeviceDeviceInstanceParserRuleCall_5_2_0 = (RuleCall)cIncludeDeviceAssignment_5_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_5_3 = (RuleCall)cGroup_5.eContents().get(3);
        private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
        private final Keyword cConfigConnectionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
        private final Assignment cConfigConnectionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
        private final RuleCall cConfigConnectionConfigConnectionParserRuleCall_6_2_0 = (RuleCall)cConfigConnectionAssignment_6_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);

        //TargetDeployEnviroment returns TargetDeployEnviroment:
        //    {TargetDeployEnviroment}
        //    'TargetDeployEnviroment:'
        //    INDENT
        //         "name:" name=EString
        //        ('includeDevice:'
        //            INDENT
        //            includeDevice+=DeviceInstance+
        //            DEDENT
        //        )?
        //        ('configConnection:'
        //            INDENT
        //            configConnection+=ConfigConnection+
        //            DEDENT
        //        )?
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{TargetDeployEnviroment}
        //'TargetDeployEnviroment:'
        //INDENT
        //     "name:" name=EString
        //    ('includeDevice:'
        //        INDENT
        //        includeDevice+=DeviceInstance+
        //        DEDENT
        //    )?
        //    ('configConnection:'
        //        INDENT
        //        configConnection+=ConfigConnection+
        //        DEDENT
        //    )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //{TargetDeployEnviroment}
        public Action getTargetDeployEnviromentAction_0() { return cTargetDeployEnviromentAction_0; }

        //'TargetDeployEnviroment:'
        public Keyword getTargetDeployEnviromentKeyword_1() { return cTargetDeployEnviromentKeyword_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_2() { return cINDENTTerminalRuleCall_2; }

        //"name:"
        public Keyword getNameKeyword_3() { return cNameKeyword_3; }

        //name=EString
        public Assignment getNameAssignment_4() { return cNameAssignment_4; }

        //EString
        public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }

        //('includeDevice:'
        //    INDENT
        //    includeDevice+=DeviceInstance+
        //    DEDENT
        //)?
        public Group getGroup_5() { return cGroup_5; }

        //'includeDevice:'
        public Keyword getIncludeDeviceKeyword_5_0() { return cIncludeDeviceKeyword_5_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_5_1() { return cINDENTTerminalRuleCall_5_1; }

        //includeDevice+=DeviceInstance+
        public Assignment getIncludeDeviceAssignment_5_2() { return cIncludeDeviceAssignment_5_2; }

        //DeviceInstance
        public RuleCall getIncludeDeviceDeviceInstanceParserRuleCall_5_2_0() { return cIncludeDeviceDeviceInstanceParserRuleCall_5_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_5_3() { return cDEDENTTerminalRuleCall_5_3; }

        //('configConnection:'
        //    INDENT
        //    configConnection+=ConfigConnection+
        //    DEDENT
        //)?
        public Group getGroup_6() { return cGroup_6; }

        //'configConnection:'
        public Keyword getConfigConnectionKeyword_6_0() { return cConfigConnectionKeyword_6_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_6_1() { return cINDENTTerminalRuleCall_6_1; }

        //configConnection+=ConfigConnection+
        public Assignment getConfigConnectionAssignment_6_2() { return cConfigConnectionAssignment_6_2; }

        //ConfigConnection
        public RuleCall getConfigConnectionConfigConnectionParserRuleCall_6_2_0() { return cConfigConnectionConfigConnectionParserRuleCall_6_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_6_3() { return cDEDENTTerminalRuleCall_6_3; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
    }
    public class DeviceInstanceElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.DeviceInstance");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
        private final Keyword cRefDeviceTypeKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final Assignment cRefDeviceTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
        private final CrossReference cRefDeviceTypeDeviceTypeCrossReference_5_0 = (CrossReference)cRefDeviceTypeAssignment_5.eContents().get(0);
        private final RuleCall cRefDeviceTypeDeviceTypeEStringParserRuleCall_5_0_1 = (RuleCall)cRefDeviceTypeDeviceTypeCrossReference_5_0.eContents().get(1);
        private final RuleCall cDEDENTTerminalRuleCall_6 = (RuleCall)cGroup.eContents().get(6);

        //DeviceInstance returns DeviceInstance:
        //    PreListElement "name:" name=EString
        //    INDENT
        //        'refDeviceType:' refDeviceType=[device::DeviceType|EString]
        //    DEDENT;
        @Override public ParserRule getRule() { return rule; }

        //PreListElement "name:" name=EString
        //INDENT
        //    'refDeviceType:' refDeviceType=[device::DeviceType|EString]
        //DEDENT
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //"name:"
        public Keyword getNameKeyword_1() { return cNameKeyword_1; }

        //name=EString
        public Assignment getNameAssignment_2() { return cNameAssignment_2; }

        //EString
        public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }

        //'refDeviceType:'
        public Keyword getRefDeviceTypeKeyword_4() { return cRefDeviceTypeKeyword_4; }

        //refDeviceType=[device::DeviceType|EString]
        public Assignment getRefDeviceTypeAssignment_5() { return cRefDeviceTypeAssignment_5; }

        //[device::DeviceType|EString]
        public CrossReference getRefDeviceTypeDeviceTypeCrossReference_5_0() { return cRefDeviceTypeDeviceTypeCrossReference_5_0; }

        //EString
        public RuleCall getRefDeviceTypeDeviceTypeEStringParserRuleCall_5_0_1() { return cRefDeviceTypeDeviceTypeEStringParserRuleCall_5_0_1; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_6() { return cDEDENTTerminalRuleCall_6; }
    }
    public class ConfigConnectionElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.ConfigConnection");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
        private final Keyword cConnectDeviceKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final RuleCall cINDENTTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
        private final Assignment cConnectDeviceAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cConnectDeviceConnectedDeviceParserRuleCall_6_0 = (RuleCall)cConnectDeviceAssignment_6.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
        private final RuleCall cDEDENTTerminalRuleCall_8 = (RuleCall)cGroup.eContents().get(8);

        //ConfigConnection returns ConfigConnection:
        //    PreListElement "name:" name=EString
        //    INDENT
        //        'connectDevice:'
        //        INDENT
        //        connectDevice+=ConnectedDevice+
        //        DEDENT
        //    DEDENT;
        @Override public ParserRule getRule() { return rule; }

        //PreListElement "name:" name=EString
        //INDENT
        //    'connectDevice:'
        //    INDENT
        //    connectDevice+=ConnectedDevice+
        //    DEDENT
        //DEDENT
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //"name:"
        public Keyword getNameKeyword_1() { return cNameKeyword_1; }

        //name=EString
        public Assignment getNameAssignment_2() { return cNameAssignment_2; }

        //EString
        public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }

        //'connectDevice:'
        public Keyword getConnectDeviceKeyword_4() { return cConnectDeviceKeyword_4; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_5() { return cINDENTTerminalRuleCall_5; }

        //connectDevice+=ConnectedDevice+
        public Assignment getConnectDeviceAssignment_6() { return cConnectDeviceAssignment_6; }

        //ConnectedDevice
        public RuleCall getConnectDeviceConnectedDeviceParserRuleCall_6_0() { return cConnectDeviceConnectedDeviceParserRuleCall_6_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_8() { return cDEDENTTerminalRuleCall_8; }
    }
    public class ConnectedDeviceElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.ConnectedDevice");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cRefDeviceKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cRefDeviceAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final CrossReference cRefDeviceDeviceInstanceCrossReference_2_0 = (CrossReference)cRefDeviceAssignment_2.eContents().get(0);
        private final RuleCall cRefDeviceDeviceInstanceEStringParserRuleCall_2_0_1 = (RuleCall)cRefDeviceDeviceInstanceCrossReference_2_0.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
        private final Keyword cRefConnectionKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final Assignment cRefConnectionAssignment_5 = (Assignment)cGroup.eContents().get(5);
        private final CrossReference cRefConnectionCommunicationConnectionCrossReference_5_0 = (CrossReference)cRefConnectionAssignment_5.eContents().get(0);
        private final RuleCall cRefConnectionCommunicationConnectionEStringParserRuleCall_5_0_1 = (RuleCall)cRefConnectionCommunicationConnectionCrossReference_5_0.eContents().get(1);
        private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
        private final Keyword cConfigurationKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
        private final Assignment cPropertiesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
        private final RuleCall cPropertiesConfigConnectionPropertyParserRuleCall_6_2_0 = (RuleCall)cPropertiesAssignment_6_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);

        //ConnectedDevice returns ConnectedDevice:
        //    PreListElement 'refDevice:' refDevice=[DeviceInstance|EString]
        //    INDENT
        //        'refConnection:' refConnection=[device::CommunicationConnection|EString]
        //        (
        //            'configuration:'
        //            INDENT
        //             properties+=ConfigConnectionProperty+
        //             DEDENT
        //        )?
        //    DEDENT;
        @Override public ParserRule getRule() { return rule; }

        //PreListElement 'refDevice:' refDevice=[DeviceInstance|EString]
        //INDENT
        //    'refConnection:' refConnection=[device::CommunicationConnection|EString]
        //    (
        //        'configuration:'
        //        INDENT
        //         properties+=ConfigConnectionProperty+
        //         DEDENT
        //    )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //'refDevice:'
        public Keyword getRefDeviceKeyword_1() { return cRefDeviceKeyword_1; }

        //refDevice=[DeviceInstance|EString]
        public Assignment getRefDeviceAssignment_2() { return cRefDeviceAssignment_2; }

        //[DeviceInstance|EString]
        public CrossReference getRefDeviceDeviceInstanceCrossReference_2_0() { return cRefDeviceDeviceInstanceCrossReference_2_0; }

        //EString
        public RuleCall getRefDeviceDeviceInstanceEStringParserRuleCall_2_0_1() { return cRefDeviceDeviceInstanceEStringParserRuleCall_2_0_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }

        //'refConnection:'
        public Keyword getRefConnectionKeyword_4() { return cRefConnectionKeyword_4; }

        //refConnection=[device::CommunicationConnection|EString]
        public Assignment getRefConnectionAssignment_5() { return cRefConnectionAssignment_5; }

        //[device::CommunicationConnection|EString]
        public CrossReference getRefConnectionCommunicationConnectionCrossReference_5_0() { return cRefConnectionCommunicationConnectionCrossReference_5_0; }

        //EString
        public RuleCall getRefConnectionCommunicationConnectionEStringParserRuleCall_5_0_1() { return cRefConnectionCommunicationConnectionEStringParserRuleCall_5_0_1; }

        //(
        //    'configuration:'
        //    INDENT
        //     properties+=ConfigConnectionProperty+
        //     DEDENT
        //)?
        public Group getGroup_6() { return cGroup_6; }

        //'configuration:'
        public Keyword getConfigurationKeyword_6_0() { return cConfigurationKeyword_6_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_6_1() { return cINDENTTerminalRuleCall_6_1; }

        //properties+=ConfigConnectionProperty+
        public Assignment getPropertiesAssignment_6_2() { return cPropertiesAssignment_6_2; }

        //ConfigConnectionProperty
        public RuleCall getPropertiesConfigConnectionPropertyParserRuleCall_6_2_0() { return cPropertiesConfigConnectionPropertyParserRuleCall_6_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_6_3() { return cDEDENTTerminalRuleCall_6_3; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
    }
    public class ConfigConnectionPropertyElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.targetEnvironment.TargetEnvironment.ConfigConnectionProperty");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cConfigConnectionPropertyAction_0 = (Action)cGroup.eContents().get(0);
        private final RuleCall cPreListElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cRefConnectionPropertyKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cRefConnectionPropertyAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final CrossReference cRefConnectionPropertyConnectionPropertyCrossReference_3_0 = (CrossReference)cRefConnectionPropertyAssignment_3.eContents().get(0);
        private final RuleCall cRefConnectionPropertyConnectionPropertyEStringParserRuleCall_3_0_1 = (RuleCall)cRefConnectionPropertyConnectionPropertyCrossReference_3_0.eContents().get(1);
        private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
        private final RuleCall cINDENTTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
        private final Keyword cValueKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
        private final Assignment cValueAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
        private final RuleCall cValuePropertyValueParserRuleCall_4_2_0 = (RuleCall)cValueAssignment_4_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_4_3 = (RuleCall)cGroup_4.eContents().get(3);

        //ConfigConnectionProperty returns ConfigConnectionProperty:
        //    {ConfigConnectionProperty}
        //        PreListElement 'refConnectionProperty:' refConnectionProperty=[device::ConnectionProperty|EString]
        //        (
        //            INDENT
        //            'value:' value=PropertyValue
        //            DEDENT
        //            )?
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{ConfigConnectionProperty}
        //    PreListElement 'refConnectionProperty:' refConnectionProperty=[device::ConnectionProperty|EString]
        //    (
        //        INDENT
        //        'value:' value=PropertyValue
        //        DEDENT
        //        )?
        public Group getGroup() { return cGroup; }

        //{ConfigConnectionProperty}
        public Action getConfigConnectionPropertyAction_0() { return cConfigConnectionPropertyAction_0; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1() { return cPreListElementParserRuleCall_1; }

        //'refConnectionProperty:'
        public Keyword getRefConnectionPropertyKeyword_2() { return cRefConnectionPropertyKeyword_2; }

        //refConnectionProperty=[device::ConnectionProperty|EString]
        public Assignment getRefConnectionPropertyAssignment_3() { return cRefConnectionPropertyAssignment_3; }

        //[device::ConnectionProperty|EString]
        public CrossReference getRefConnectionPropertyConnectionPropertyCrossReference_3_0() { return cRefConnectionPropertyConnectionPropertyCrossReference_3_0; }

        //EString
        public RuleCall getRefConnectionPropertyConnectionPropertyEStringParserRuleCall_3_0_1() { return cRefConnectionPropertyConnectionPropertyEStringParserRuleCall_3_0_1; }

        //(
        //    INDENT
        //    'value:' value=PropertyValue
        //    DEDENT
        //    )?
        public Group getGroup_4() { return cGroup_4; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4_0() { return cINDENTTerminalRuleCall_4_0; }

        //'value:'
        public Keyword getValueKeyword_4_1() { return cValueKeyword_4_1; }

        //value=PropertyValue
        public Assignment getValueAssignment_4_2() { return cValueAssignment_4_2; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_4_2_0() { return cValuePropertyValueParserRuleCall_4_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_4_3() { return cDEDENTTerminalRuleCall_4_3; }
    }


    private final TargetEnvironmentElements pTargetEnvironment;
    private final DescriptionElements pDescription;
    private final TargetDeployEnviromentElements pTargetDeployEnviroment;
    private final DeviceInstanceElements pDeviceInstance;
    private final ConfigConnectionElements pConfigConnection;
    private final ConnectedDeviceElements pConnectedDevice;
    private final ConfigConnectionPropertyElements pConfigConnectionProperty;

    private final Grammar grammar;

    private final DeviceGrammarAccess gaDevice;

    private final BaseGrammarAccess gaBase;

    private final TerminalsGrammarAccess gaTerminals;

    @Inject
    public TargetEnvironmentGrammarAccess(GrammarProvider grammarProvider,
            DeviceGrammarAccess gaDevice,
            BaseGrammarAccess gaBase,
            TerminalsGrammarAccess gaTerminals) {
        this.grammar = internalFindGrammar(grammarProvider);
        this.gaDevice = gaDevice;
        this.gaBase = gaBase;
        this.gaTerminals = gaTerminals;
        this.pTargetEnvironment = new TargetEnvironmentElements();
        this.pDescription = new DescriptionElements();
        this.pTargetDeployEnviroment = new TargetDeployEnviromentElements();
        this.pDeviceInstance = new DeviceInstanceElements();
        this.pConfigConnection = new ConfigConnectionElements();
        this.pConnectedDevice = new ConnectedDeviceElements();
        this.pConfigConnectionProperty = new ConfigConnectionPropertyElements();
    }

    protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
        Grammar grammar = grammarProvider.getGrammar(this);
        while (grammar != null) {
            if ("de.fraunhofer.ipa.targetEnvironment.TargetEnvironment".equals(grammar.getName())) {
                return grammar;
            }
            List<Grammar> grammars = grammar.getUsedGrammars();
            if (!grammars.isEmpty()) {
                grammar = grammars.iterator().next();
            } else {
                return null;
            }
        }
        return grammar;
    }

    @Override
    public Grammar getGrammar() {
        return grammar;
    }


    public DeviceGrammarAccess getDeviceGrammarAccess() {
        return gaDevice;
    }

    public BaseGrammarAccess getBaseGrammarAccess() {
        return gaBase;
    }

    public TerminalsGrammarAccess getTerminalsGrammarAccess() {
        return gaTerminals;
    }


    //TargetEnvironment returns TargetEnvironment:
    //    {TargetEnvironment}
    //    type+=Description
    //;
    public TargetEnvironmentElements getTargetEnvironmentAccess() {
        return pTargetEnvironment;
    }

    public ParserRule getTargetEnvironmentRule() {
        return getTargetEnvironmentAccess().getRule();
    }

    //@Override
    //Description returns base::Description:
    //    DeviceSet | TargetDeployEnviroment
    //;
    public DescriptionElements getDescriptionAccess() {
        return pDescription;
    }

    public ParserRule getDescriptionRule() {
        return getDescriptionAccess().getRule();
    }

    //TargetDeployEnviroment returns TargetDeployEnviroment:
    //    {TargetDeployEnviroment}
    //    'TargetDeployEnviroment:'
    //    INDENT
    //         "name:" name=EString
    //        ('includeDevice:'
    //            INDENT
    //            includeDevice+=DeviceInstance+
    //            DEDENT
    //        )?
    //        ('configConnection:'
    //            INDENT
    //            configConnection+=ConfigConnection+
    //            DEDENT
    //        )?
    //    DEDENT
    //    ;
    public TargetDeployEnviromentElements getTargetDeployEnviromentAccess() {
        return pTargetDeployEnviroment;
    }

    public ParserRule getTargetDeployEnviromentRule() {
        return getTargetDeployEnviromentAccess().getRule();
    }

    //DeviceInstance returns DeviceInstance:
    //    PreListElement "name:" name=EString
    //    INDENT
    //        'refDeviceType:' refDeviceType=[device::DeviceType|EString]
    //    DEDENT;
    public DeviceInstanceElements getDeviceInstanceAccess() {
        return pDeviceInstance;
    }

    public ParserRule getDeviceInstanceRule() {
        return getDeviceInstanceAccess().getRule();
    }

    //ConfigConnection returns ConfigConnection:
    //    PreListElement "name:" name=EString
    //    INDENT
    //        'connectDevice:'
    //        INDENT
    //        connectDevice+=ConnectedDevice+
    //        DEDENT
    //    DEDENT;
    public ConfigConnectionElements getConfigConnectionAccess() {
        return pConfigConnection;
    }

    public ParserRule getConfigConnectionRule() {
        return getConfigConnectionAccess().getRule();
    }

    //ConnectedDevice returns ConnectedDevice:
    //    PreListElement 'refDevice:' refDevice=[DeviceInstance|EString]
    //    INDENT
    //        'refConnection:' refConnection=[device::CommunicationConnection|EString]
    //        (
    //            'configuration:'
    //            INDENT
    //             properties+=ConfigConnectionProperty+
    //             DEDENT
    //        )?
    //    DEDENT;
    public ConnectedDeviceElements getConnectedDeviceAccess() {
        return pConnectedDevice;
    }

    public ParserRule getConnectedDeviceRule() {
        return getConnectedDeviceAccess().getRule();
    }

    //ConfigConnectionProperty returns ConfigConnectionProperty:
    //    {ConfigConnectionProperty}
    //        PreListElement 'refConnectionProperty:' refConnectionProperty=[device::ConnectionProperty|EString]
    //        (
    //            INDENT
    //            'value:' value=PropertyValue
    //            DEDENT
    //            )?
    //    ;
    public ConfigConnectionPropertyElements getConfigConnectionPropertyAccess() {
        return pConfigConnectionProperty;
    }

    public ParserRule getConfigConnectionPropertyRule() {
        return getConfigConnectionPropertyAccess().getRule();
    }

    //DeviceSet returns device::DeviceSet:
    //    device+=DeviceType*
    //;
    public DeviceGrammarAccess.DeviceSetElements getDeviceSetAccess() {
        return gaDevice.getDeviceSetAccess();
    }

    public ParserRule getDeviceSetRule() {
        return getDeviceSetAccess().getRule();
    }

    //CapabilityKind returns device::CapabilityKind:
    //    AttributeKind | MaximumKind | MinimumKind | SelectionKind;
    public DeviceGrammarAccess.CapabilityKindElements getCapabilityKindAccess() {
        return gaDevice.getCapabilityKindAccess();
    }

    public ParserRule getCapabilityKindRule() {
        return getCapabilityKindAccess().getRule();
    }

    //DeviceType returns device::DeviceType:
    //    {device::DeviceType}
    //    'DeviceType:'
    //    INDENT
    //        "name:" name=EString
    //        ('capability:'
    //            INDENT
    //            capability+=CapabilityProperty+
    //            DEDENT
    //        )?
    //        ('communicationConnection:'
    //            INDENT
    //            communicationConnection+=CommunicationConnection+
    //            DEDENT
    //        )?
    //    DEDENT;
    public DeviceGrammarAccess.DeviceTypeElements getDeviceTypeAccess() {
        return gaDevice.getDeviceTypeAccess();
    }

    public ParserRule getDeviceTypeRule() {
        return getDeviceTypeAccess().getRule();
    }

    //CapabilityProperty returns device::CapabilityProperty:
    //    PreListElement "name:" name=EString
    //    INDENT
    //    'type:' type=[device::CapabilityType|EString]
    //    'kind:' kind=CapabilityKind
    //    ('value:' value=PropertyValue)?
    //    DEDENT
    //    ;
    public DeviceGrammarAccess.CapabilityPropertyElements getCapabilityPropertyAccess() {
        return gaDevice.getCapabilityPropertyAccess();
    }

    public ParserRule getCapabilityPropertyRule() {
        return getCapabilityPropertyAccess().getRule();
    }

    //AttributeKind returns device::AttributeKind:
    //    {device::AttributeKind}
    //    'AttributeKind'
    //    ;
    public DeviceGrammarAccess.AttributeKindElements getAttributeKindAccess() {
        return gaDevice.getAttributeKindAccess();
    }

    public ParserRule getAttributeKindRule() {
        return getAttributeKindAccess().getRule();
    }

    //MaximumKind returns device::MaximumKind:
    //    {device::MaximumKind}
    //    'MaximumKind'
    //    ;
    public DeviceGrammarAccess.MaximumKindElements getMaximumKindAccess() {
        return gaDevice.getMaximumKindAccess();
    }

    public ParserRule getMaximumKindRule() {
        return getMaximumKindAccess().getRule();
    }

    //MinimumKind returns device::MinimumKind:
    //    {device::MinimumKind}
    //    'MinimumKind'
    //    ;
    public DeviceGrammarAccess.MinimumKindElements getMinimumKindAccess() {
        return gaDevice.getMinimumKindAccess();
    }

    public ParserRule getMinimumKindRule() {
        return getMinimumKindAccess().getRule();
    }

    //SelectionKind returns device::SelectionKind:
    //    {device::SelectionKind}
    //    'SelectionKind'
    //    ;
    public DeviceGrammarAccess.SelectionKindElements getSelectionKindAccess() {
        return gaDevice.getSelectionKindAccess();
    }

    public ParserRule getSelectionKindRule() {
        return getSelectionKindAccess().getRule();
    }

    //ConnectionProperty returns device::ConnectionProperty:
    //    {device::ConnectionProperty}
    //    PreListElement "name:" name=EString
    //    (
    //        INDENT
    //        'value:' value=PropertyValue
    //        DEDENT
    //    )?
    //    ;
    public DeviceGrammarAccess.ConnectionPropertyElements getConnectionPropertyAccess() {
        return gaDevice.getConnectionPropertyAccess();
    }

    public ParserRule getConnectionPropertyRule() {
        return getConnectionPropertyAccess().getRule();
    }

    //CommunicationConnection returns device::CommunicationConnection:
    //    {device::CommunicationConnection}
    //    PreListElement 'name:'  name=EString
    //    INDENT
    //        'type:' type=CommunicationType
    //        ('properties:'
    //            INDENT
    //            properties+=ConnectionProperty+
    //            DEDENT
    //            )?
    //    DEDENT;
    public DeviceGrammarAccess.CommunicationConnectionElements getCommunicationConnectionAccess() {
        return gaDevice.getCommunicationConnectionAccess();
    }

    public ParserRule getCommunicationConnectionRule() {
        return getCommunicationConnectionAccess().getRule();
    }

    //PropertyType returns device::PropertyType:
    //    CommunicationType | CapabilityType
    //;
    public DeviceGrammarAccess.PropertyTypeElements getPropertyTypeAccess() {
        return gaDevice.getPropertyTypeAccess();
    }

    public ParserRule getPropertyTypeRule() {
        return getPropertyTypeAccess().getRule();
    }

    //CommunicationType returns device::CommunicationType:
    //    {device::CommunicationType}
    //    name=EString;
    public DeviceGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
        return gaDevice.getCommunicationTypeAccess();
    }

    public ParserRule getCommunicationTypeRule() {
        return getCommunicationTypeAccess().getRule();
    }

    //CapabilityType returns device::CapabilityType:
    //    {device::CapabilityType}
    //    name=EString;
    public DeviceGrammarAccess.CapabilityTypeElements getCapabilityTypeAccess() {
        return gaDevice.getCapabilityTypeAccess();
    }

    public ParserRule getCapabilityTypeRule() {
        return getCapabilityTypeAccess().getRule();
    }

    //PropertyValue returns PropertyValue:
    //    PropertyValueInt | PropertyValueDouble | PropertyValueString;
    public BaseGrammarAccess.PropertyValueElements getPropertyValueAccess() {
        return gaBase.getPropertyValueAccess();
    }

    public ParserRule getPropertyValueRule() {
        return getPropertyValueAccess().getRule();
    }

    //PropertyValueInt returns PropertyValueInt:
    //    value=Integer0;
    public BaseGrammarAccess.PropertyValueIntElements getPropertyValueIntAccess() {
        return gaBase.getPropertyValueIntAccess();
    }

    public ParserRule getPropertyValueIntRule() {
        return getPropertyValueIntAccess().getRule();
    }

    //PropertyValueDouble returns PropertyValueDouble:
    //    value=Double0
    //;
    public BaseGrammarAccess.PropertyValueDoubleElements getPropertyValueDoubleAccess() {
        return gaBase.getPropertyValueDoubleAccess();
    }

    public ParserRule getPropertyValueDoubleRule() {
        return getPropertyValueDoubleAccess().getRule();
    }

    //PropertyValueString returns PropertyValueString:
    //    value=EString;
    public BaseGrammarAccess.PropertyValueStringElements getPropertyValueStringAccess() {
        return gaBase.getPropertyValueStringAccess();
    }

    public ParserRule getPropertyValueStringRule() {
        return getPropertyValueStringAccess().getRule();
    }

    //terminal DIGIT: '0'..'9';
    public TerminalRule getDIGITRule() {
        return gaBase.getDIGITRule();
    }

    //terminal BINARY: ('0b'|'0B')('0'|'1')+;
    public TerminalRule getBINARYRule() {
        return gaBase.getBINARYRule();
    }

    //terminal BOOLEAN: 'true'|'false';
    public TerminalRule getBOOLEANRule() {
        return gaBase.getBOOLEANRule();
    }

    //terminal DOUBLE returns ecore::EDouble: DIGIT (('.' DECINT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DIGIT));
    public TerminalRule getDOUBLERule() {
        return gaBase.getDOUBLERule();
    }

    //  // Use terminal to avoid 'e' turning into a keyword
    //terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
    public TerminalRule getDECINTRule() {
        return gaBase.getDECINTRule();
    }

    //terminal DAY:'1'..'9' | '1'..'3' '0'..'9';
    public TerminalRule getDAYRule() {
        return gaBase.getDAYRule();
    }

    //terminal MONTH:'1'..'9' | '1' '0'..'2';
    public TerminalRule getMONTHRule() {
        return gaBase.getMONTHRule();
    }

    //terminal YEAR:'0'..'2' '0'..'9' '0'..'9' '0'..'9';
    public TerminalRule getYEARRule() {
        return gaBase.getYEARRule();
    }

    //terminal HOUR: ('0'..'1')('0'..'9') | ('2')('0'..'3');
    public TerminalRule getHOURRule() {
        return gaBase.getHOURRule();
    }

    //terminal MIN_SEC:('0'..'5')('0'..'9');
    public TerminalRule getMIN_SECRule() {
        return gaBase.getMIN_SECRule();
    }

    //terminal DATE_TIME: YEAR'-'MONTH'-'DAY'T'HOUR':'MIN_SEC':'MIN_SEC;
    public TerminalRule getDATE_TIMERule() {
        return gaBase.getDATE_TIMERule();
    }

    //Base64Binary returns type::Base64Binary:
    //    BINARY ;
    public BaseGrammarAccess.Base64BinaryElements getBase64BinaryAccess() {
        return gaBase.getBase64BinaryAccess();
    }

    public ParserRule getBase64BinaryRule() {
        return getBase64BinaryAccess().getRule();
    }

    //boolean0 returns type::Boolean:
    //    BOOLEAN;
    public BaseGrammarAccess.Boolean0Elements getBoolean0Access() {
        return gaBase.getBoolean0Access();
    }

    public ParserRule getBoolean0Rule() {
        return getBoolean0Access().getRule();
    }

    //Double0 returns type::Double:
    //    DOUBLE;
    public BaseGrammarAccess.Double0Elements getDouble0Access() {
        return gaBase.getDouble0Access();
    }

    public ParserRule getDouble0Rule() {
        return getDouble0Access().getRule();
    }

    //Integer0 returns type::Int:
    //    DECINT;
    public BaseGrammarAccess.Integer0Elements getInteger0Access() {
        return gaBase.getInteger0Access();
    }

    public ParserRule getInteger0Rule() {
        return getInteger0Access().getRule();
    }

    //EString returns ecore::EString:
    //    STRING | ID;
    public BaseGrammarAccess.EStringElements getEStringAccess() {
        return gaBase.getEStringAccess();
    }

    public ParserRule getEStringRule() {
        return getEStringAccess().getRule();
    }

    //@Override
    //terminal SL_COMMENT: '#' !('\n'|'\r')*;
    public TerminalRule getSL_COMMENTRule() {
        return gaBase.getSL_COMMENTRule();
    }

    //terminal INDENT: 'synthetic:INDENT';
    public TerminalRule getINDENTRule() {
        return gaBase.getINDENTRule();
    }

    //terminal DEDENT: 'synthetic:DEDENT';
    public TerminalRule getDEDENTRule() {
        return gaBase.getDEDENTRule();
    }

    //PreListElement hidden(SL_COMMENT):
    //  '-';
    public BaseGrammarAccess.PreListElementElements getPreListElementAccess() {
        return gaBase.getPreListElementAccess();
    }

    public ParserRule getPreListElementRule() {
        return getPreListElementAccess().getRule();
    }

    //terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
    public TerminalRule getIDRule() {
        return gaTerminals.getIDRule();
    }

    //terminal INT returns ecore::EInt: ('0'..'9')+;
    public TerminalRule getINTRule() {
        return gaTerminals.getINTRule();
    }

    //terminal STRING:
    //            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
    //            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
    //        ;
    public TerminalRule getSTRINGRule() {
        return gaTerminals.getSTRINGRule();
    }

    //terminal ML_COMMENT : '/*' -> '*/';
    public TerminalRule getML_COMMENTRule() {
        return gaTerminals.getML_COMMENTRule();
    }

    //terminal WS         : (' '|'\t'|'\r'|'\n')+;
    public TerminalRule getWSRule() {
        return gaTerminals.getWSRule();
    }

    //terminal ANY_OTHER: .;
    public TerminalRule getANY_OTHERRule() {
        return gaTerminals.getANY_OTHERRule();
    }
}
