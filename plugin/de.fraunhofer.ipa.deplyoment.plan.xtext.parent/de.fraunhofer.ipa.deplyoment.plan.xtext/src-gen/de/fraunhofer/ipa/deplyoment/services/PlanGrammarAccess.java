/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.deplyoment.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.deployment.services.UtilGrammarAccess;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PlanGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {

    public class DeploymentPlanElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.DeploymentPlan");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Keyword cDeploymentPlanKeyword_0 = (Keyword)cGroup.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
        private final Keyword cDeployToKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final Assignment cDeployToAssignment_5 = (Assignment)cGroup.eContents().get(5);
        private final CrossReference cDeployToTargetDeployEnviromentCrossReference_5_0 = (CrossReference)cDeployToAssignment_5.eContents().get(0);
        private final RuleCall cDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1 = (RuleCall)cDeployToTargetDeployEnviromentCrossReference_5_0.eContents().get(1);
        private final Assignment cRealizeAssignment_6 = (Assignment)cGroup.eContents().get(6);
        private final RuleCall cRealizeAbstractRealizationParserRuleCall_6_0 = (RuleCall)cRealizeAssignment_6.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);

        //DeploymentPlan returns DeploymentPlan:
        //    'DeploymentPlan:'
        //    INDENT
        //        'name:' name=EString
        //        'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        //        realize=AbstractRealization
        //    DEDENT
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //'DeploymentPlan:'
        //INDENT
        //    'name:' name=EString
        //    'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        //    realize=AbstractRealization
        //DEDENT
        public Group getGroup() { return cGroup; }

        //'DeploymentPlan:'
        public Keyword getDeploymentPlanKeyword_0() { return cDeploymentPlanKeyword_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1() { return cINDENTTerminalRuleCall_1; }

        //'name:'
        public Keyword getNameKeyword_2() { return cNameKeyword_2; }

        //name=EString
        public Assignment getNameAssignment_3() { return cNameAssignment_3; }

        //EString
        public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }

        //'deployTo:'
        public Keyword getDeployToKeyword_4() { return cDeployToKeyword_4; }

        //deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
        public Assignment getDeployToAssignment_5() { return cDeployToAssignment_5; }

        //[targetEnvironment::TargetDeployEnviroment|EString]
        public CrossReference getDeployToTargetDeployEnviromentCrossReference_5_0() { return cDeployToTargetDeployEnviromentCrossReference_5_0; }

        //EString
        public RuleCall getDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1() { return cDeployToTargetDeployEnviromentEStringParserRuleCall_5_0_1; }

        //realize=AbstractRealization
        public Assignment getRealizeAssignment_6() { return cRealizeAssignment_6; }

        //AbstractRealization
        public RuleCall getRealizeAbstractRealizationParserRuleCall_6_0() { return cRealizeAbstractRealizationParserRuleCall_6_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
    }
    public class AbstarctConfigSoftwareComponentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstarctConfigSoftwareComponent");
        private final RuleCall cConfigSoftwareComponentParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstarctConfigSoftwareComponent returns AbstarctConfigSoftwareComponent:
        //    ConfigSoftwareComponent
        //;
        @Override public ParserRule getRule() { return rule; }

        //ConfigSoftwareComponent
        public RuleCall getConfigSoftwareComponentParserRuleCall() { return cConfigSoftwareComponentParserRuleCall; }
    }
    public class AbstractComputationAssignmentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractComputationAssignment");
        private final RuleCall cImplementationAssignmentParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractComputationAssignment returns AbstractComputationAssignment:
        //    ImplementationAssignment;
        @Override public ParserRule getRule() { return rule; }

        //ImplementationAssignment
        public RuleCall getImplementationAssignmentParserRuleCall() { return cImplementationAssignmentParserRuleCall; }
    }
    public class AbstractRealizationElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractRealization");
        private final RuleCall cRealizationParserRuleCall = (RuleCall)rule.eContents().get(1);

        //AbstractRealization returns AbstractRealization:
        //    Realization
        //;
        @Override public ParserRule getRule() { return rule; }

        //Realization
        public RuleCall getRealizationParserRuleCall() { return cRealizationParserRuleCall; }
    }
    public class AbstractConfigExecutionParameterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.AbstractConfigExecutionParameter");
        private final RuleCall cConfigExecutionParameterParserRuleCall = (RuleCall)rule.eContents().get(1);

        ////Middleware returns Middleware:
        ////    ROSDistro;
        //AbstractConfigExecutionParameter returns AbstractConfigExecutionParameter:
        //    ConfigExecutionParameter;
        @Override public ParserRule getRule() { return rule; }

        //ConfigExecutionParameter
        public RuleCall getConfigExecutionParameterParserRuleCall() { return cConfigExecutionParameterParserRuleCall; }
    }
    public class RealizationElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.Realization");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cRealizationAction_0 = (Action)cGroup.eContents().get(0);
        private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
        private final Keyword cAssignmentKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
        private final Assignment cRealizationsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
        private final RuleCall cRealizationsAbstractComputationAssignmentParserRuleCall_1_2_0 = (RuleCall)cRealizationsAssignment_1_2.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);

        //Realization returns Realization:
        //    {Realization}
        //    (
        //    'assignment:'
        //    INDENT
        //        realizations+=AbstractComputationAssignment+
        //    DEDENT
        //     )?
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{Realization}
        //(
        //'assignment:'
        //INDENT
        //    realizations+=AbstractComputationAssignment+
        //DEDENT
        // )?
        public Group getGroup() { return cGroup; }

        //{Realization}
        public Action getRealizationAction_0() { return cRealizationAction_0; }

        //(
        //'assignment:'
        //INDENT
        //    realizations+=AbstractComputationAssignment+
        //DEDENT
        // )?
        public Group getGroup_1() { return cGroup_1; }

        //'assignment:'
        public Keyword getAssignmentKeyword_1_0() { return cAssignmentKeyword_1_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_1() { return cINDENTTerminalRuleCall_1_1; }

        //realizations+=AbstractComputationAssignment+
        public Assignment getRealizationsAssignment_1_2() { return cRealizationsAssignment_1_2; }

        //AbstractComputationAssignment
        public RuleCall getRealizationsAbstractComputationAssignmentParserRuleCall_1_2_0() { return cRealizationsAbstractComputationAssignmentParserRuleCall_1_2_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_3() { return cDEDENTTerminalRuleCall_1_3; }
    }
    public class ConfigSoftwareComponentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ConfigSoftwareComponent");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Assignment cComponentAssignment_0 = (Assignment)cGroup.eContents().get(0);
        private final CrossReference cComponentAbstractComputationAssignmentTargetCrossReference_0_0 = (CrossReference)cComponentAssignment_0.eContents().get(0);
        private final RuleCall cComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1 = (RuleCall)cComponentAbstractComputationAssignmentTargetCrossReference_0_0.eContents().get(1);
        private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
        private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
        private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
        private final Keyword cExecutionConfigurationKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_1_1_2 = (RuleCall)cGroup_1_1.eContents().get(2);
        private final Assignment cExecutionConfigurationAssignment_1_1_3 = (Assignment)cGroup_1_1.eContents().get(3);
        private final RuleCall cExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_1_3_0 = (RuleCall)cExecutionConfigurationAssignment_1_1_3.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_1_4 = (RuleCall)cGroup_1_1.eContents().get(4);
        private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
        private final Keyword cStartCommandKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_1_2_1 = (RuleCall)cGroup_1_2.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_1_2_2 = (RuleCall)cGroup_1_2.eContents().get(2);
        private final Assignment cStartCommandAssignment_1_2_3 = (Assignment)cGroup_1_2.eContents().get(3);
        private final RuleCall cStartCommandEStringParserRuleCall_1_2_3_0 = (RuleCall)cStartCommandAssignment_1_2_3.eContents().get(0);
        private final Group cGroup_1_2_4 = (Group)cGroup_1_2.eContents().get(4);
        private final RuleCall cPreListElementParserRuleCall_1_2_4_0 = (RuleCall)cGroup_1_2_4.eContents().get(0);
        private final Assignment cStartCommandAssignment_1_2_4_1 = (Assignment)cGroup_1_2_4.eContents().get(1);
        private final RuleCall cStartCommandEStringParserRuleCall_1_2_4_1_0 = (RuleCall)cStartCommandAssignment_1_2_4_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_1_2_5 = (RuleCall)cGroup_1_2.eContents().get(5);
        private final RuleCall cDEDENTTerminalRuleCall_1_3 = (RuleCall)cGroup_1.eContents().get(3);

        //ConfigSoftwareComponent returns ConfigSoftwareComponent:
        //    component=[util::AbstractComputationAssignmentTarget| EString](":"
        //        (
        //            INDENT
        //            'executionConfiguration:'
        //            INDENT
        //            (executionConfiguration+=AbstractConfigExecutionParameter)+
        //            DEDENT
        //      )?
        //      ('startCommand:'
        //          INDENT
        //              PreListElement startCommand+=EString
        //          (
        //              PreListElement (startCommand+=EString)*
        //          )?
        //          DEDENT
        //      )?
        //         DEDENT
        //     )?
        //;
        @Override public ParserRule getRule() { return rule; }

        //component=[util::AbstractComputationAssignmentTarget| EString](":"
        //    (
        //        INDENT
        //        'executionConfiguration:'
        //        INDENT
        //        (executionConfiguration+=AbstractConfigExecutionParameter)+
        //        DEDENT
        //  )?
        //  ('startCommand:'
        //      INDENT
        //          PreListElement startCommand+=EString
        //      (
        //          PreListElement (startCommand+=EString)*
        //      )?
        //      DEDENT
        //  )?
        //     DEDENT
        // )?
        public Group getGroup() { return cGroup; }

        //component=[util::AbstractComputationAssignmentTarget| EString]
        public Assignment getComponentAssignment_0() { return cComponentAssignment_0; }

        //[util::AbstractComputationAssignmentTarget| EString]
        public CrossReference getComponentAbstractComputationAssignmentTargetCrossReference_0_0() { return cComponentAbstractComputationAssignmentTargetCrossReference_0_0; }

        //EString
        public RuleCall getComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1() { return cComponentAbstractComputationAssignmentTargetEStringParserRuleCall_0_0_1; }

        //(":"
        //        (
        //            INDENT
        //            'executionConfiguration:'
        //            INDENT
        //            (executionConfiguration+=AbstractConfigExecutionParameter)+
        //            DEDENT
        //      )?
        //      ('startCommand:'
        //          INDENT
        //              PreListElement startCommand+=EString
        //          (
        //              PreListElement (startCommand+=EString)*
        //          )?
        //          DEDENT
        //      )?
        //         DEDENT
        //     )?
        public Group getGroup_1() { return cGroup_1; }

        //":"
        public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

        //  (
        //      INDENT
        //      'executionConfiguration:'
        //      INDENT
        //      (executionConfiguration+=AbstractConfigExecutionParameter)+
        //      DEDENT
        //)?
        public Group getGroup_1_1() { return cGroup_1_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_1_0() { return cINDENTTerminalRuleCall_1_1_0; }

        //'executionConfiguration:'
        public Keyword getExecutionConfigurationKeyword_1_1_1() { return cExecutionConfigurationKeyword_1_1_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_1_2() { return cINDENTTerminalRuleCall_1_1_2; }

        //(executionConfiguration+=AbstractConfigExecutionParameter)+
        public Assignment getExecutionConfigurationAssignment_1_1_3() { return cExecutionConfigurationAssignment_1_1_3; }

        //AbstractConfigExecutionParameter
        public RuleCall getExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_1_3_0() { return cExecutionConfigurationAbstractConfigExecutionParameterParserRuleCall_1_1_3_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_1_4() { return cDEDENTTerminalRuleCall_1_1_4; }

        //('startCommand:'
        //    INDENT
        //        PreListElement startCommand+=EString
        //    (
        //        PreListElement (startCommand+=EString)*
        //    )?
        //    DEDENT
        //)?
        public Group getGroup_1_2() { return cGroup_1_2; }

        //'startCommand:'
        public Keyword getStartCommandKeyword_1_2_0() { return cStartCommandKeyword_1_2_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_1_2_1() { return cINDENTTerminalRuleCall_1_2_1; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1_2_2() { return cPreListElementParserRuleCall_1_2_2; }

        //startCommand+=EString
        public Assignment getStartCommandAssignment_1_2_3() { return cStartCommandAssignment_1_2_3; }

        //EString
        public RuleCall getStartCommandEStringParserRuleCall_1_2_3_0() { return cStartCommandEStringParserRuleCall_1_2_3_0; }

        //(
        //    PreListElement (startCommand+=EString)*
        //)?
        public Group getGroup_1_2_4() { return cGroup_1_2_4; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1_2_4_0() { return cPreListElementParserRuleCall_1_2_4_0; }

        //(startCommand+=EString)*
        public Assignment getStartCommandAssignment_1_2_4_1() { return cStartCommandAssignment_1_2_4_1; }

        //EString
        public RuleCall getStartCommandEStringParserRuleCall_1_2_4_1_0() { return cStartCommandEStringParserRuleCall_1_2_4_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_2_5() { return cDEDENTTerminalRuleCall_1_2_5; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_1_3() { return cDEDENTTerminalRuleCall_1_3; }
    }
    public class ImplementationAssignmentElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ImplementationAssignment");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final RuleCall cPreListElementParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
        private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
        private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
        private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
        private final RuleCall cINDENTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
        private final Keyword cExecutedByKeyword_4 = (Keyword)cGroup.eContents().get(4);
        private final Assignment cExecutedByAssignment_5 = (Assignment)cGroup.eContents().get(5);
        private final CrossReference cExecutedByComputationDeviceInstanceCrossReference_5_0 = (CrossReference)cExecutedByAssignment_5.eContents().get(0);
        private final RuleCall cExecutedByComputationDeviceInstanceEStringParserRuleCall_5_0_1 = (RuleCall)cExecutedByComputationDeviceInstanceCrossReference_5_0.eContents().get(1);
        private final Keyword cSoftwareComponentsKeyword_6 = (Keyword)cGroup.eContents().get(6);
        private final RuleCall cINDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
        private final RuleCall cPreListElementParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
        private final Assignment cSoftwareComponentsAssignment_9 = (Assignment)cGroup.eContents().get(9);
        private final RuleCall cSoftwareComponentsConfigSoftwareComponentParserRuleCall_9_0 = (RuleCall)cSoftwareComponentsAssignment_9.eContents().get(0);
        private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
        private final RuleCall cPreListElementParserRuleCall_10_0 = (RuleCall)cGroup_10.eContents().get(0);
        private final Assignment cSoftwareComponentsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
        private final RuleCall cSoftwareComponentsConfigSoftwareComponentParserRuleCall_10_1_0 = (RuleCall)cSoftwareComponentsAssignment_10_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
        private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
        private final Keyword cMiddlewareKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
        private final Assignment cMiddlewareAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
        private final RuleCall cMiddlewareMiddlewareParserRuleCall_12_1_0 = (RuleCall)cMiddlewareAssignment_12_1.eContents().get(0);
        private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
        private final Keyword cRuntimeTypeKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
        private final Assignment cRuntimeTypeAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
        private final RuleCall cRuntimeTypeRunTimeTypeEnumRuleCall_13_1_0 = (RuleCall)cRuntimeTypeAssignment_13_1.eContents().get(0);
        private final Group cGroup_14 = (Group)cGroup.eContents().get(14);
        private final Keyword cOpertingSystemTypeKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
        private final Assignment cOpertingSystemTypeAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
        private final RuleCall cOpertingSystemTypeOpertingSystemNameParserRuleCall_14_1_0 = (RuleCall)cOpertingSystemTypeAssignment_14_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_15 = (RuleCall)cGroup.eContents().get(15);

        //ImplementationAssignment returns ImplementationAssignment:
        //     PreListElement 'name:' name = EString
        //  INDENT
        //    'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        //    'softwareComponents:'
        //        INDENT
        //            PreListElement softwareComponents+=ConfigSoftwareComponent
        //            (PreListElement softwareComponents+=ConfigSoftwareComponent)*
        //        DEDENT
        //    ('middleware:' middleware=Middleware)?
        //    ('runtimeType:' runtimeType=RunTimeType)?
        //    ('opertingSystemType:' opertingSystemType=OpertingSystemName)?
        //  DEDENT
        //;
        @Override public ParserRule getRule() { return rule; }

        //   PreListElement 'name:' name = EString
        //INDENT
        //  'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        //  'softwareComponents:'
        //      INDENT
        //          PreListElement softwareComponents+=ConfigSoftwareComponent
        //          (PreListElement softwareComponents+=ConfigSoftwareComponent)*
        //      DEDENT
        //  ('middleware:' middleware=Middleware)?
        //  ('runtimeType:' runtimeType=RunTimeType)?
        //  ('opertingSystemType:' opertingSystemType=OpertingSystemName)?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_0() { return cPreListElementParserRuleCall_0; }

        //'name:'
        public Keyword getNameKeyword_1() { return cNameKeyword_1; }

        //name = EString
        public Assignment getNameAssignment_2() { return cNameAssignment_2; }

        //EString
        public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_3() { return cINDENTTerminalRuleCall_3; }

        //'executedBy:'
        public Keyword getExecutedByKeyword_4() { return cExecutedByKeyword_4; }

        //executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
        public Assignment getExecutedByAssignment_5() { return cExecutedByAssignment_5; }

        //[targetEnvironment::ComputationDeviceInstance|EString]
        public CrossReference getExecutedByComputationDeviceInstanceCrossReference_5_0() { return cExecutedByComputationDeviceInstanceCrossReference_5_0; }

        //EString
        public RuleCall getExecutedByComputationDeviceInstanceEStringParserRuleCall_5_0_1() { return cExecutedByComputationDeviceInstanceEStringParserRuleCall_5_0_1; }

        //'softwareComponents:'
        public Keyword getSoftwareComponentsKeyword_6() { return cSoftwareComponentsKeyword_6; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_7() { return cINDENTTerminalRuleCall_7; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_8() { return cPreListElementParserRuleCall_8; }

        //softwareComponents+=ConfigSoftwareComponent
        public Assignment getSoftwareComponentsAssignment_9() { return cSoftwareComponentsAssignment_9; }

        //ConfigSoftwareComponent
        public RuleCall getSoftwareComponentsConfigSoftwareComponentParserRuleCall_9_0() { return cSoftwareComponentsConfigSoftwareComponentParserRuleCall_9_0; }

        //(PreListElement softwareComponents+=ConfigSoftwareComponent)*
        public Group getGroup_10() { return cGroup_10; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_10_0() { return cPreListElementParserRuleCall_10_0; }

        //softwareComponents+=ConfigSoftwareComponent
        public Assignment getSoftwareComponentsAssignment_10_1() { return cSoftwareComponentsAssignment_10_1; }

        //ConfigSoftwareComponent
        public RuleCall getSoftwareComponentsConfigSoftwareComponentParserRuleCall_10_1_0() { return cSoftwareComponentsConfigSoftwareComponentParserRuleCall_10_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_11() { return cDEDENTTerminalRuleCall_11; }

        //('middleware:' middleware=Middleware)?
        public Group getGroup_12() { return cGroup_12; }

        //'middleware:'
        public Keyword getMiddlewareKeyword_12_0() { return cMiddlewareKeyword_12_0; }

        //middleware=Middleware
        public Assignment getMiddlewareAssignment_12_1() { return cMiddlewareAssignment_12_1; }

        //Middleware
        public RuleCall getMiddlewareMiddlewareParserRuleCall_12_1_0() { return cMiddlewareMiddlewareParserRuleCall_12_1_0; }

        //('runtimeType:' runtimeType=RunTimeType)?
        public Group getGroup_13() { return cGroup_13; }

        //'runtimeType:'
        public Keyword getRuntimeTypeKeyword_13_0() { return cRuntimeTypeKeyword_13_0; }

        //runtimeType=RunTimeType
        public Assignment getRuntimeTypeAssignment_13_1() { return cRuntimeTypeAssignment_13_1; }

        //RunTimeType
        public RuleCall getRuntimeTypeRunTimeTypeEnumRuleCall_13_1_0() { return cRuntimeTypeRunTimeTypeEnumRuleCall_13_1_0; }

        //('opertingSystemType:' opertingSystemType=OpertingSystemName)?
        public Group getGroup_14() { return cGroup_14; }

        //'opertingSystemType:'
        public Keyword getOpertingSystemTypeKeyword_14_0() { return cOpertingSystemTypeKeyword_14_0; }

        //opertingSystemType=OpertingSystemName
        public Assignment getOpertingSystemTypeAssignment_14_1() { return cOpertingSystemTypeAssignment_14_1; }

        //OpertingSystemName
        public RuleCall getOpertingSystemTypeOpertingSystemNameParserRuleCall_14_1_0() { return cOpertingSystemTypeOpertingSystemNameParserRuleCall_14_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_15() { return cDEDENTTerminalRuleCall_15; }
    }
    public class MiddlewareElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.Middleware");
        private final RuleCall cRosMiddlewareParserRuleCall = (RuleCall)rule.eContents().get(1);

        //Middleware returns Middleware:
        //    RosMiddleware
        //;
        @Override public ParserRule getRule() { return rule; }

        //RosMiddleware
        public RuleCall getRosMiddlewareParserRuleCall() { return cRosMiddlewareParserRuleCall; }
    }
    public class RosMiddlewareElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.RosMiddleware");
        private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
        private final RuleCall cValueROSDistroEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);

        //RosMiddleware returns RosMiddleware:
        //    value=ROSDistro
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //value=ROSDistro
        public Assignment getValueAssignment() { return cValueAssignment; }

        //ROSDistro
        public RuleCall getValueROSDistroEnumRuleCall_0() { return cValueROSDistroEnumRuleCall_0; }
    }
    public class HumbleROSDistroElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.HumbleROSDistro");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cHumbleROSDistroAction_0 = (Action)cGroup.eContents().get(0);
        private final Keyword cHumbleKeyword_1 = (Keyword)cGroup.eContents().get(1);

        //HumbleROSDistro returns HumbleROSDistro:
        //    {HumbleROSDistro}
        //    'Humble'
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{HumbleROSDistro}
        //'Humble'
        public Group getGroup() { return cGroup; }

        //{HumbleROSDistro}
        public Action getHumbleROSDistroAction_0() { return cHumbleROSDistroAction_0; }

        //'Humble'
        public Keyword getHumbleKeyword_1() { return cHumbleKeyword_1; }
    }
    public class NoeticROSDistroElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.NoeticROSDistro");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cNoeticROSDistroAction_0 = (Action)cGroup.eContents().get(0);
        private final Keyword cNoeticKeyword_1 = (Keyword)cGroup.eContents().get(1);

        //NoeticROSDistro returns NoeticROSDistro:
        //    {NoeticROSDistro}
        //    'Noetic'
        //    ;
        @Override public ParserRule getRule() { return rule; }

        //{NoeticROSDistro}
        //'Noetic'
        public Group getGroup() { return cGroup; }

        //{NoeticROSDistro}
        public Action getNoeticROSDistroAction_0() { return cNoeticROSDistroAction_0; }

        //'Noetic'
        public Keyword getNoeticKeyword_1() { return cNoeticKeyword_1; }
    }
    public class ConfigExecutionParameterElements extends AbstractParserRuleElementFinder {
        private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ConfigExecutionParameter");
        private final Group cGroup = (Group)rule.eContents().get(1);
        private final Action cConfigExecutionParameterAction_0 = (Action)cGroup.eContents().get(0);
        private final RuleCall cPreListElementParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
        private final Keyword cFromKeyword_2 = (Keyword)cGroup.eContents().get(2);
        private final Assignment cFromAssignment_3 = (Assignment)cGroup.eContents().get(3);
        private final CrossReference cFromExecutionPropertyCrossReference_3_0 = (CrossReference)cFromAssignment_3.eContents().get(0);
        private final RuleCall cFromExecutionPropertyEStringParserRuleCall_3_0_1 = (RuleCall)cFromExecutionPropertyCrossReference_3_0.eContents().get(1);
        private final RuleCall cINDENTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
        private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
        private final Keyword cToKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
        private final Assignment cToAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
        private final CrossReference cToAbstractConfigPropertyCrossReference_5_1_0 = (CrossReference)cToAssignment_5_1.eContents().get(0);
        private final RuleCall cToAbstractConfigPropertyEStringParserRuleCall_5_1_0_1 = (RuleCall)cToAbstractConfigPropertyCrossReference_5_1_0.eContents().get(1);
        private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
        private final Keyword cValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
        private final Assignment cValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
        private final RuleCall cValuePropertyValueParserRuleCall_6_1_0 = (RuleCall)cValueAssignment_6_1.eContents().get(0);
        private final RuleCall cDEDENTTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);

        //ConfigExecutionParameter returns ConfigExecutionParameter:
        //    {ConfigExecutionParameter}
        //    PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
        //    INDENT
        //        (
        //        'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //        )?
        //        (
        //        'value:' value=PropertyValue
        //        )?
        //    DEDENT
        //;
        @Override public ParserRule getRule() { return rule; }

        //{ConfigExecutionParameter}
        //PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
        //INDENT
        //    (
        //    'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //    )?
        //    (
        //    'value:' value=PropertyValue
        //    )?
        //DEDENT
        public Group getGroup() { return cGroup; }

        //{ConfigExecutionParameter}
        public Action getConfigExecutionParameterAction_0() { return cConfigExecutionParameterAction_0; }

        //PreListElement
        public RuleCall getPreListElementParserRuleCall_1() { return cPreListElementParserRuleCall_1; }

        //'from:'
        public Keyword getFromKeyword_2() { return cFromKeyword_2; }

        //from=[implementationDescription::ExecutionProperty|EString]
        public Assignment getFromAssignment_3() { return cFromAssignment_3; }

        //[implementationDescription::ExecutionProperty|EString]
        public CrossReference getFromExecutionPropertyCrossReference_3_0() { return cFromExecutionPropertyCrossReference_3_0; }

        //EString
        public RuleCall getFromExecutionPropertyEStringParserRuleCall_3_0_1() { return cFromExecutionPropertyEStringParserRuleCall_3_0_1; }

        //INDENT
        public RuleCall getINDENTTerminalRuleCall_4() { return cINDENTTerminalRuleCall_4; }

        //(
        //'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
        //)?
        public Group getGroup_5() { return cGroup_5; }

        //'to:'
        public Keyword getToKeyword_5_0() { return cToKeyword_5_0; }

        //to=[targetEnvironment::AbstractConfigProperty|EString]
        public Assignment getToAssignment_5_1() { return cToAssignment_5_1; }

        //[targetEnvironment::AbstractConfigProperty|EString]
        public CrossReference getToAbstractConfigPropertyCrossReference_5_1_0() { return cToAbstractConfigPropertyCrossReference_5_1_0; }

        //EString
        public RuleCall getToAbstractConfigPropertyEStringParserRuleCall_5_1_0_1() { return cToAbstractConfigPropertyEStringParserRuleCall_5_1_0_1; }

        //(
        //'value:' value=PropertyValue
        //)?
        public Group getGroup_6() { return cGroup_6; }

        //'value:'
        public Keyword getValueKeyword_6_0() { return cValueKeyword_6_0; }

        //value=PropertyValue
        public Assignment getValueAssignment_6_1() { return cValueAssignment_6_1; }

        //PropertyValue
        public RuleCall getValuePropertyValueParserRuleCall_6_1_0() { return cValuePropertyValueParserRuleCall_6_1_0; }

        //DEDENT
        public RuleCall getDEDENTTerminalRuleCall_7() { return cDEDENTTerminalRuleCall_7; }
    }

    public class ROSDistroElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
        private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.deplyoment.Plan.ROSDistro");
        private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
        private final EnumLiteralDeclaration cNoeticEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
        private final Keyword cNoeticNoeticKeyword_0_0 = (Keyword)cNoeticEnumLiteralDeclaration_0.eContents().get(0);
        private final EnumLiteralDeclaration cHumbleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
        private final Keyword cHumbleHumbleKeyword_1_0 = (Keyword)cHumbleEnumLiteralDeclaration_1.eContents().get(0);
        private final EnumLiteralDeclaration cRollingEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
        private final Keyword cRollingRollingKeyword_2_0 = (Keyword)cRollingEnumLiteralDeclaration_2.eContents().get(0);

        //enum ROSDistro returns ROSDistro:
        //      noetic = 'noetic' | humble = 'humble' | rolling = 'rolling';
        public EnumRule getRule() { return rule; }

        //noetic = 'noetic' | humble = 'humble' | rolling = 'rolling'
        public Alternatives getAlternatives() { return cAlternatives; }

        //noetic = 'noetic'
        public EnumLiteralDeclaration getNoeticEnumLiteralDeclaration_0() { return cNoeticEnumLiteralDeclaration_0; }

        //'noetic'
        public Keyword getNoeticNoeticKeyword_0_0() { return cNoeticNoeticKeyword_0_0; }

        //humble = 'humble'
        public EnumLiteralDeclaration getHumbleEnumLiteralDeclaration_1() { return cHumbleEnumLiteralDeclaration_1; }

        //'humble'
        public Keyword getHumbleHumbleKeyword_1_0() { return cHumbleHumbleKeyword_1_0; }

        //rolling = 'rolling'
        public EnumLiteralDeclaration getRollingEnumLiteralDeclaration_2() { return cRollingEnumLiteralDeclaration_2; }

        //'rolling'
        public Keyword getRollingRollingKeyword_2_0() { return cRollingRollingKeyword_2_0; }
    }

    private final DeploymentPlanElements pDeploymentPlan;
    private final AbstarctConfigSoftwareComponentElements pAbstarctConfigSoftwareComponent;
    private final AbstractComputationAssignmentElements pAbstractComputationAssignment;
    private final AbstractRealizationElements pAbstractRealization;
    private final AbstractConfigExecutionParameterElements pAbstractConfigExecutionParameter;
    private final RealizationElements pRealization;
    private final ConfigSoftwareComponentElements pConfigSoftwareComponent;
    private final ImplementationAssignmentElements pImplementationAssignment;
    private final MiddlewareElements pMiddleware;
    private final RosMiddlewareElements pRosMiddleware;
    private final ROSDistroElements eROSDistro;
    private final HumbleROSDistroElements pHumbleROSDistro;
    private final NoeticROSDistroElements pNoeticROSDistro;
    private final ConfigExecutionParameterElements pConfigExecutionParameter;

    private final Grammar grammar;

    private final UtilGrammarAccess gaUtil;

    private final TerminalsGrammarAccess gaTerminals;

    @Inject
    public PlanGrammarAccess(GrammarProvider grammarProvider,
            UtilGrammarAccess gaUtil,
            TerminalsGrammarAccess gaTerminals) {
        this.grammar = internalFindGrammar(grammarProvider);
        this.gaUtil = gaUtil;
        this.gaTerminals = gaTerminals;
        this.pDeploymentPlan = new DeploymentPlanElements();
        this.pAbstarctConfigSoftwareComponent = new AbstarctConfigSoftwareComponentElements();
        this.pAbstractComputationAssignment = new AbstractComputationAssignmentElements();
        this.pAbstractRealization = new AbstractRealizationElements();
        this.pAbstractConfigExecutionParameter = new AbstractConfigExecutionParameterElements();
        this.pRealization = new RealizationElements();
        this.pConfigSoftwareComponent = new ConfigSoftwareComponentElements();
        this.pImplementationAssignment = new ImplementationAssignmentElements();
        this.pMiddleware = new MiddlewareElements();
        this.pRosMiddleware = new RosMiddlewareElements();
        this.eROSDistro = new ROSDistroElements();
        this.pHumbleROSDistro = new HumbleROSDistroElements();
        this.pNoeticROSDistro = new NoeticROSDistroElements();
        this.pConfigExecutionParameter = new ConfigExecutionParameterElements();
    }

    protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
        Grammar grammar = grammarProvider.getGrammar(this);
        while (grammar != null) {
            if ("de.fraunhofer.ipa.deplyoment.Plan".equals(grammar.getName())) {
                return grammar;
            }
            List<Grammar> grammars = grammar.getUsedGrammars();
            if (!grammars.isEmpty()) {
                grammar = grammars.iterator().next();
            } else {
                return null;
            }
        }
        return grammar;
    }

    @Override
    public Grammar getGrammar() {
        return grammar;
    }


    public UtilGrammarAccess getUtilGrammarAccess() {
        return gaUtil;
    }

    public TerminalsGrammarAccess getTerminalsGrammarAccess() {
        return gaTerminals;
    }


    //DeploymentPlan returns DeploymentPlan:
    //    'DeploymentPlan:'
    //    INDENT
    //        'name:' name=EString
    //        'deployTo:' deployTo=[targetEnvironment::TargetDeployEnviroment|EString]
    //        realize=AbstractRealization
    //    DEDENT
    //    ;
    public DeploymentPlanElements getDeploymentPlanAccess() {
        return pDeploymentPlan;
    }

    public ParserRule getDeploymentPlanRule() {
        return getDeploymentPlanAccess().getRule();
    }

    //AbstarctConfigSoftwareComponent returns AbstarctConfigSoftwareComponent:
    //    ConfigSoftwareComponent
    //;
    public AbstarctConfigSoftwareComponentElements getAbstarctConfigSoftwareComponentAccess() {
        return pAbstarctConfigSoftwareComponent;
    }

    public ParserRule getAbstarctConfigSoftwareComponentRule() {
        return getAbstarctConfigSoftwareComponentAccess().getRule();
    }

    //AbstractComputationAssignment returns AbstractComputationAssignment:
    //    ImplementationAssignment;
    public AbstractComputationAssignmentElements getAbstractComputationAssignmentAccess() {
        return pAbstractComputationAssignment;
    }

    public ParserRule getAbstractComputationAssignmentRule() {
        return getAbstractComputationAssignmentAccess().getRule();
    }

    //AbstractRealization returns AbstractRealization:
    //    Realization
    //;
    public AbstractRealizationElements getAbstractRealizationAccess() {
        return pAbstractRealization;
    }

    public ParserRule getAbstractRealizationRule() {
        return getAbstractRealizationAccess().getRule();
    }

    ////Middleware returns Middleware:
    ////    ROSDistro;
    //AbstractConfigExecutionParameter returns AbstractConfigExecutionParameter:
    //    ConfigExecutionParameter;
    public AbstractConfigExecutionParameterElements getAbstractConfigExecutionParameterAccess() {
        return pAbstractConfigExecutionParameter;
    }

    public ParserRule getAbstractConfigExecutionParameterRule() {
        return getAbstractConfigExecutionParameterAccess().getRule();
    }

    //Realization returns Realization:
    //    {Realization}
    //    (
    //    'assignment:'
    //    INDENT
    //        realizations+=AbstractComputationAssignment+
    //    DEDENT
    //     )?
    //    ;
    public RealizationElements getRealizationAccess() {
        return pRealization;
    }

    public ParserRule getRealizationRule() {
        return getRealizationAccess().getRule();
    }

    //ConfigSoftwareComponent returns ConfigSoftwareComponent:
    //    component=[util::AbstractComputationAssignmentTarget| EString](":"
    //        (
    //            INDENT
    //            'executionConfiguration:'
    //            INDENT
    //            (executionConfiguration+=AbstractConfigExecutionParameter)+
    //            DEDENT
    //      )?
    //      ('startCommand:'
    //          INDENT
    //              PreListElement startCommand+=EString
    //          (
    //              PreListElement (startCommand+=EString)*
    //          )?
    //          DEDENT
    //      )?
    //         DEDENT
    //     )?
    //;
    public ConfigSoftwareComponentElements getConfigSoftwareComponentAccess() {
        return pConfigSoftwareComponent;
    }

    public ParserRule getConfigSoftwareComponentRule() {
        return getConfigSoftwareComponentAccess().getRule();
    }

    //ImplementationAssignment returns ImplementationAssignment:
    //     PreListElement 'name:' name = EString
    //  INDENT
    //    'executedBy:' executedBy=[targetEnvironment::ComputationDeviceInstance|EString]
    //    'softwareComponents:'
    //        INDENT
    //            PreListElement softwareComponents+=ConfigSoftwareComponent
    //            (PreListElement softwareComponents+=ConfigSoftwareComponent)*
    //        DEDENT
    //    ('middleware:' middleware=Middleware)?
    //    ('runtimeType:' runtimeType=RunTimeType)?
    //    ('opertingSystemType:' opertingSystemType=OpertingSystemName)?
    //  DEDENT
    //;
    public ImplementationAssignmentElements getImplementationAssignmentAccess() {
        return pImplementationAssignment;
    }

    public ParserRule getImplementationAssignmentRule() {
        return getImplementationAssignmentAccess().getRule();
    }

    //Middleware returns Middleware:
    //    RosMiddleware
    //;
    public MiddlewareElements getMiddlewareAccess() {
        return pMiddleware;
    }

    public ParserRule getMiddlewareRule() {
        return getMiddlewareAccess().getRule();
    }

    //RosMiddleware returns RosMiddleware:
    //    value=ROSDistro
    //    ;
    public RosMiddlewareElements getRosMiddlewareAccess() {
        return pRosMiddleware;
    }

    public ParserRule getRosMiddlewareRule() {
        return getRosMiddlewareAccess().getRule();
    }

    //enum ROSDistro returns ROSDistro:
    //      noetic = 'noetic' | humble = 'humble' | rolling = 'rolling';
    public ROSDistroElements getROSDistroAccess() {
        return eROSDistro;
    }

    public EnumRule getROSDistroRule() {
        return getROSDistroAccess().getRule();
    }

    //HumbleROSDistro returns HumbleROSDistro:
    //    {HumbleROSDistro}
    //    'Humble'
    //    ;
    public HumbleROSDistroElements getHumbleROSDistroAccess() {
        return pHumbleROSDistro;
    }

    public ParserRule getHumbleROSDistroRule() {
        return getHumbleROSDistroAccess().getRule();
    }

    //NoeticROSDistro returns NoeticROSDistro:
    //    {NoeticROSDistro}
    //    'Noetic'
    //    ;
    public NoeticROSDistroElements getNoeticROSDistroAccess() {
        return pNoeticROSDistro;
    }

    public ParserRule getNoeticROSDistroRule() {
        return getNoeticROSDistroAccess().getRule();
    }

    //ConfigExecutionParameter returns ConfigExecutionParameter:
    //    {ConfigExecutionParameter}
    //    PreListElement 'from:' from=[implementationDescription::ExecutionProperty|EString]
    //    INDENT
    //        (
    //        'to:' to=[targetEnvironment::AbstractConfigProperty|EString]
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //    DEDENT
    //;
    public ConfigExecutionParameterElements getConfigExecutionParameterAccess() {
        return pConfigExecutionParameter;
    }

    public ParserRule getConfigExecutionParameterRule() {
        return getConfigExecutionParameterAccess().getRule();
    }

    //Description returns Description:
    //    {Description}
    //;
    public UtilGrammarAccess.DescriptionElements getDescriptionAccess() {
        return gaUtil.getDescriptionAccess();
    }

    public ParserRule getDescriptionRule() {
        return getDescriptionAccess().getRule();
    }

    //Resource returns Resource:
    //    'name:'    name=EString
    //    INDENT
    //        'type:' type=AbstractResouceType
    //        ('properties:'
    //            INDENT
    //            properties+=AbstractProperty
    //            (properties+=AbstractProperty)*
    //            DEDENT
    //            )?
    //    DEDENT
    //    ;
    public UtilGrammarAccess.ResourceElements getResourceAccess() {
        return gaUtil.getResourceAccess();
    }

    public ParserRule getResourceRule() {
        return getResourceAccess().getRule();
    }

    //AbstractComputationAssignmentTarget returns AbstractComputationAssignmentTarget:
    //    {AbstractComputationAssignmentTarget}
    //;
    public UtilGrammarAccess.AbstractComputationAssignmentTargetElements getAbstractComputationAssignmentTargetAccess() {
        return gaUtil.getAbstractComputationAssignmentTargetAccess();
    }

    public ParserRule getAbstractComputationAssignmentTargetRule() {
        return getAbstractComputationAssignmentTargetAccess().getRule();
    }

    //AbstractProperty returns AbstractProperty:
    //    PropertyAttribute | PropertyMaximun | PropertyMinimum | PropertySelection | PropertyRange;
    public UtilGrammarAccess.AbstractPropertyElements getAbstractPropertyAccess() {
        return gaUtil.getAbstractPropertyAccess();
    }

    public ParserRule getAbstractPropertyRule() {
        return getAbstractPropertyAccess().getRule();
    }

    //PropertyKind returns PropertyKind:
    //    AttributeKind | MaximumKind | MinimumKind | RangeKind | SelectionKind
    //;
    public UtilGrammarAccess.PropertyKindElements getPropertyKindAccess() {
        return gaUtil.getPropertyKindAccess();
    }

    public ParserRule getPropertyKindRule() {
        return getPropertyKindAccess().getRule();
    }

    //Property returns Property:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=PropertyKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyElements getPropertyAccess() {
        return gaUtil.getPropertyAccess();
    }

    public ParserRule getPropertyRule() {
        return getPropertyAccess().getRule();
    }

    //PropertyAttribute returns PropertyAttribute:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=AttributeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //;
    public UtilGrammarAccess.PropertyAttributeElements getPropertyAttributeAccess() {
        return gaUtil.getPropertyAttributeAccess();
    }

    public ParserRule getPropertyAttributeRule() {
        return getPropertyAttributeAccess().getRule();
    }

    //PropertyMaximun returns PropertyMaximun:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MaximumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMaximunElements getPropertyMaximunAccess() {
        return gaUtil.getPropertyMaximunAccess();
    }

    public ParserRule getPropertyMaximunRule() {
        return getPropertyMaximunAccess().getRule();
    }

    //PropertyMinimum returns PropertyMinimum:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=MinimumKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //        'value:' value=PropertyValue
    //        )?
    //        (DEDENT)?
    //        ;
    public UtilGrammarAccess.PropertyMinimumElements getPropertyMinimumAccess() {
        return gaUtil.getPropertyMinimumAccess();
    }

    public ParserRule getPropertyMinimumRule() {
        return getPropertyMinimumAccess().getRule();
    }

    //PropertySelection returns PropertySelection:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=SelectionKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            ( PreListElement value+=PropertyValue)*
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertySelectionElements getPropertySelectionAccess() {
        return gaUtil.getPropertySelectionAccess();
    }

    public ParserRule getPropertySelectionRule() {
        return getPropertySelectionAccess().getRule();
    }

    //PropertyRange returns PropertyRange:
    //    PreListElement 'name:'    name=EString
    //    INDENT
    //        'kind:' kind=RangeKind
    //        (
    //        'description:' description=EString
    //        )?
    //        (
    //            'value:'
    //            INDENT
    //            PreListElement value+=PropertyValue
    //            PreListElement value+=PropertyValue
    //            DEDENT
    //            )?
    //        (DEDENT)?
    //    ;
    public UtilGrammarAccess.PropertyRangeElements getPropertyRangeAccess() {
        return gaUtil.getPropertyRangeAccess();
    }

    public ParserRule getPropertyRangeRule() {
        return getPropertyRangeAccess().getRule();
    }

    //PropertyValue returns PropertyValue:
    //    PropertyValueInt | PropertyValueDouble | PropertyValueString| ProcessorArchitectureValue | LinuxDistributionValue | UbuntuVersionValue;
    public UtilGrammarAccess.PropertyValueElements getPropertyValueAccess() {
        return gaUtil.getPropertyValueAccess();
    }

    public ParserRule getPropertyValueRule() {
        return getPropertyValueAccess().getRule();
    }

    //PropertyValueInt returns PropertyValueInt:
    //    value=Integer0;
    public UtilGrammarAccess.PropertyValueIntElements getPropertyValueIntAccess() {
        return gaUtil.getPropertyValueIntAccess();
    }

    public ParserRule getPropertyValueIntRule() {
        return getPropertyValueIntAccess().getRule();
    }

    //PropertyValueDouble returns PropertyValueDouble:
    //    value=Double0
    //;
    public UtilGrammarAccess.PropertyValueDoubleElements getPropertyValueDoubleAccess() {
        return gaUtil.getPropertyValueDoubleAccess();
    }

    public ParserRule getPropertyValueDoubleRule() {
        return getPropertyValueDoubleAccess().getRule();
    }

    //PropertyValueString returns PropertyValueString:
    //    value=EString;
    public UtilGrammarAccess.PropertyValueStringElements getPropertyValueStringAccess() {
        return gaUtil.getPropertyValueStringAccess();
    }

    public ParserRule getPropertyValueStringRule() {
        return getPropertyValueStringAccess().getRule();
    }

    //ProcessorArchitectureValue returns ProcessorArchitectureValue:
    //    value=ProcessorArchitectureType
    //;
    public UtilGrammarAccess.ProcessorArchitectureValueElements getProcessorArchitectureValueAccess() {
        return gaUtil.getProcessorArchitectureValueAccess();
    }

    public ParserRule getProcessorArchitectureValueRule() {
        return getProcessorArchitectureValueAccess().getRule();
    }

    //AbstractResouceType returns AbstractResouceType:
    // ResourceType;
    public UtilGrammarAccess.AbstractResouceTypeElements getAbstractResouceTypeAccess() {
        return gaUtil.getAbstractResouceTypeAccess();
    }

    public ParserRule getAbstractResouceTypeRule() {
        return getAbstractResouceTypeAccess().getRule();
    }

    //OpertingSystemResouceType returns OpertingSystemResouceType:
    //    LinuxOpertingSystem | MacOSOpertingSystem
    //;
    public UtilGrammarAccess.OpertingSystemResouceTypeElements getOpertingSystemResouceTypeAccess() {
        return gaUtil.getOpertingSystemResouceTypeAccess();
    }

    public ParserRule getOpertingSystemResouceTypeRule() {
        return getOpertingSystemResouceTypeAccess().getRule();
    }

    //ResourceType returns ResourceType:
    //    {ResourceType}
    //    name=EString
    //;
    public UtilGrammarAccess.ResourceTypeElements getResourceTypeAccess() {
        return gaUtil.getResourceTypeAccess();
    }

    public ParserRule getResourceTypeRule() {
        return getResourceTypeAccess().getRule();
    }

    //ProcessorResouceType returns ProcessorResouceType:
    //    {ProcessorResouceType}
    //    "Processor"
    //    ;
    public UtilGrammarAccess.ProcessorResouceTypeElements getProcessorResouceTypeAccess() {
        return gaUtil.getProcessorResouceTypeAccess();
    }

    public ParserRule getProcessorResouceTypeRule() {
        return getProcessorResouceTypeAccess().getRule();
    }

    //AbstractCommunicationType returns AbstractCommunicationType:
    //    CommunicationType | NetworkCommunicationType
    //;
    public UtilGrammarAccess.AbstractCommunicationTypeElements getAbstractCommunicationTypeAccess() {
        return gaUtil.getAbstractCommunicationTypeAccess();
    }

    public ParserRule getAbstractCommunicationTypeRule() {
        return getAbstractCommunicationTypeAccess().getRule();
    }

    //LinuxOpertingSystem returns LinuxOpertingSystem:
    //    {LinuxOpertingSystem}
    //    "LinuxOpertingSystem"
    //;
    public UtilGrammarAccess.LinuxOpertingSystemElements getLinuxOpertingSystemAccess() {
        return gaUtil.getLinuxOpertingSystemAccess();
    }

    public ParserRule getLinuxOpertingSystemRule() {
        return getLinuxOpertingSystemAccess().getRule();
    }

    //MacOSOpertingSystem returns MacOSOpertingSystem:
    //    {MacOSOpertingSystem}
    //    "MacOSOpertingSystem"
    //    ;
    public UtilGrammarAccess.MacOSOpertingSystemElements getMacOSOpertingSystemAccess() {
        return gaUtil.getMacOSOpertingSystemAccess();
    }

    public ParserRule getMacOSOpertingSystemRule() {
        return getMacOSOpertingSystemAccess().getRule();
    }

    //CommunicationType returns CommunicationType:
    //    {CommunicationType}
    //    name=EString
    //    ;
    public UtilGrammarAccess.CommunicationTypeElements getCommunicationTypeAccess() {
        return gaUtil.getCommunicationTypeAccess();
    }

    public ParserRule getCommunicationTypeRule() {
        return getCommunicationTypeAccess().getRule();
    }

    //NetworkCommunicationType returns NetworkCommunicationType:
    //    EthernetCommunicationType | WlanCommunicationType;
    public UtilGrammarAccess.NetworkCommunicationTypeElements getNetworkCommunicationTypeAccess() {
        return gaUtil.getNetworkCommunicationTypeAccess();
    }

    public ParserRule getNetworkCommunicationTypeRule() {
        return getNetworkCommunicationTypeAccess().getRule();
    }

    //EthernetCommunicationType returns EthernetCommunicationType:
    //    {EthernetCommunicationType}
    //    'Ethernet'
    //    ;
    public UtilGrammarAccess.EthernetCommunicationTypeElements getEthernetCommunicationTypeAccess() {
        return gaUtil.getEthernetCommunicationTypeAccess();
    }

    public ParserRule getEthernetCommunicationTypeRule() {
        return getEthernetCommunicationTypeAccess().getRule();
    }

    //WlanCommunicationType returns WlanCommunicationType:
    //    {WlanCommunicationType}
    //    'Wlan'
    //    ;
    public UtilGrammarAccess.WlanCommunicationTypeElements getWlanCommunicationTypeAccess() {
        return gaUtil.getWlanCommunicationTypeAccess();
    }

    public ParserRule getWlanCommunicationTypeRule() {
        return getWlanCommunicationTypeAccess().getRule();
    }

    //AttributeKind returns AttributeKind:
    //    {AttributeKind}
    //    'AttributeKind'
    //    ;
    public UtilGrammarAccess.AttributeKindElements getAttributeKindAccess() {
        return gaUtil.getAttributeKindAccess();
    }

    public ParserRule getAttributeKindRule() {
        return getAttributeKindAccess().getRule();
    }

    //MaximumKind returns MaximumKind:
    //    {MaximumKind}
    //    'MaximumKind'
    //    ;
    public UtilGrammarAccess.MaximumKindElements getMaximumKindAccess() {
        return gaUtil.getMaximumKindAccess();
    }

    public ParserRule getMaximumKindRule() {
        return getMaximumKindAccess().getRule();
    }

    //MinimumKind returns MinimumKind:
    //    {MinimumKind}
    //    'MinimumKind'
    //    ;
    public UtilGrammarAccess.MinimumKindElements getMinimumKindAccess() {
        return gaUtil.getMinimumKindAccess();
    }

    public ParserRule getMinimumKindRule() {
        return getMinimumKindAccess().getRule();
    }

    //SelectionKind returns SelectionKind:
    //    {SelectionKind}
    //    'SelectionKind'
    //    ;
    public UtilGrammarAccess.SelectionKindElements getSelectionKindAccess() {
        return gaUtil.getSelectionKindAccess();
    }

    public ParserRule getSelectionKindRule() {
        return getSelectionKindAccess().getRule();
    }

    //RangeKind returns RangeKind:
    //    {RangeKind}
    //    'RangeKind'
    //    ;
    public UtilGrammarAccess.RangeKindElements getRangeKindAccess() {
        return gaUtil.getRangeKindAccess();
    }

    public ParserRule getRangeKindRule() {
        return getRangeKindAccess().getRule();
    }

    //LinuxDistributionValue returns LinuxDistributionValue:
    //    {LinuxDistributionValue}
    //    value=LinuxDistribution
    //    ;
    public UtilGrammarAccess.LinuxDistributionValueElements getLinuxDistributionValueAccess() {
        return gaUtil.getLinuxDistributionValueAccess();
    }

    public ParserRule getLinuxDistributionValueRule() {
        return getLinuxDistributionValueAccess().getRule();
    }

    //UbuntuVersionValue returns UbuntuVersionValue:
    //    {UbuntuVersionValue}
    //    value=UbuntuVersion;
    public UtilGrammarAccess.UbuntuVersionValueElements getUbuntuVersionValueAccess() {
        return gaUtil.getUbuntuVersionValueAccess();
    }

    public ParserRule getUbuntuVersionValueRule() {
        return getUbuntuVersionValueAccess().getRule();
    }

    //OpertingSystemName returns OpertingSystemName:
    //    LinuxDistributionValue
    //;
    public UtilGrammarAccess.OpertingSystemNameElements getOpertingSystemNameAccess() {
        return gaUtil.getOpertingSystemNameAccess();
    }

    public ParserRule getOpertingSystemNameRule() {
        return getOpertingSystemNameAccess().getRule();
    }

    //enum RunTimeType returns RunTimeType:
    //                container = 'container';
    public UtilGrammarAccess.RunTimeTypeElements getRunTimeTypeAccess() {
        return gaUtil.getRunTimeTypeAccess();
    }

    public EnumRule getRunTimeTypeRule() {
        return getRunTimeTypeAccess().getRule();
    }

    //enum ProcessorArchitectureType returns ProcessorArchitectureType:
    //                x86 = 'x86' | arm64 = 'arm64';
    public UtilGrammarAccess.ProcessorArchitectureTypeElements getProcessorArchitectureTypeAccess() {
        return gaUtil.getProcessorArchitectureTypeAccess();
    }

    public EnumRule getProcessorArchitectureTypeRule() {
        return getProcessorArchitectureTypeAccess().getRule();
    }

    //enum LinuxDistribution returns LinuxDistribution:
    //                ubuntu = 'ubuntu' | debian = 'debian';
    public UtilGrammarAccess.LinuxDistributionElements getLinuxDistributionAccess() {
        return gaUtil.getLinuxDistributionAccess();
    }

    public EnumRule getLinuxDistributionRule() {
        return getLinuxDistributionAccess().getRule();
    }

    //enum UbuntuVersion returns UbuntuVersion:
    //                focal = 'focal' | jammy = 'jammy';
    public UtilGrammarAccess.UbuntuVersionElements getUbuntuVersionAccess() {
        return gaUtil.getUbuntuVersionAccess();
    }

    public EnumRule getUbuntuVersionRule() {
        return getUbuntuVersionAccess().getRule();
    }

    //terminal DIGIT: '0'..'9';
    public TerminalRule getDIGITRule() {
        return gaUtil.getDIGITRule();
    }

    //terminal DOUBLE returns ecore::EDouble: DIGIT (('.' DECINT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DIGIT));
    public TerminalRule getDOUBLERule() {
        return gaUtil.getDOUBLERule();
    }

    //  // Use terminal to avoid 'e' turning into a keyword
    //terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
    public TerminalRule getDECINTRule() {
        return gaUtil.getDECINTRule();
    }

    //Double0 returns type::Double:
    //    DOUBLE;
    public UtilGrammarAccess.Double0Elements getDouble0Access() {
        return gaUtil.getDouble0Access();
    }

    public ParserRule getDouble0Rule() {
        return getDouble0Access().getRule();
    }

    //Integer0 returns type::Int:
    //    DECINT;
    public UtilGrammarAccess.Integer0Elements getInteger0Access() {
        return gaUtil.getInteger0Access();
    }

    public ParserRule getInteger0Rule() {
        return getInteger0Access().getRule();
    }

    //EString returns ecore::EString:
    //    STRING | ID;
    public UtilGrammarAccess.EStringElements getEStringAccess() {
        return gaUtil.getEStringAccess();
    }

    public ParserRule getEStringRule() {
        return getEStringAccess().getRule();
    }

    //@Override
    //terminal SL_COMMENT: '#' !('\n'|'\r')*;
    public TerminalRule getSL_COMMENTRule() {
        return gaUtil.getSL_COMMENTRule();
    }

    //terminal INDENT: 'synthetic:INDENT';
    public TerminalRule getINDENTRule() {
        return gaUtil.getINDENTRule();
    }

    //terminal DEDENT: 'synthetic:DEDENT';
    public TerminalRule getDEDENTRule() {
        return gaUtil.getDEDENTRule();
    }

    //PreListElement hidden(SL_COMMENT):
    //  '-';
    public UtilGrammarAccess.PreListElementElements getPreListElementAccess() {
        return gaUtil.getPreListElementAccess();
    }

    public ParserRule getPreListElementRule() {
        return getPreListElementAccess().getRule();
    }

    //terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
    public TerminalRule getIDRule() {
        return gaTerminals.getIDRule();
    }

    //terminal INT returns ecore::EInt: ('0'..'9')+;
    public TerminalRule getINTRule() {
        return gaTerminals.getINTRule();
    }

    //terminal STRING:
    //            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
    //            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
    //        ;
    public TerminalRule getSTRINGRule() {
        return gaTerminals.getSTRINGRule();
    }

    //terminal ML_COMMENT : '/*' -> '*/';
    public TerminalRule getML_COMMENTRule() {
        return gaTerminals.getML_COMMENTRule();
    }

    //terminal WS         : (' '|'\t'|'\r'|'\n')+;
    public TerminalRule getWSRule() {
        return gaTerminals.getWSRule();
    }

    //terminal ANY_OTHER: .;
    public TerminalRule getANY_OTHERRule() {
        return gaTerminals.getANY_OTHERRule();
    }
}
